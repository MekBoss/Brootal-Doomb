CLASS doomb_flare_base : visual_sfx
{ 
Default
{
	+noclip
	+NOINTERACTION;
	+NOGRAVITY;
	renderstyle "add";
	radius 1;
	height 1;
	alpha 0.4;
	scale 0.4;
}

private vector3 offset;
private actor following;
private bool pulse;

//return specific percent from some number
private double doomb_get_percent_from(double from = 0, double percent_amount = 0)
{
	double one_percent = (from / 100);

	return one_percent * percent_amount;
}

private void doomb_flare_pulse()
{
	if(pulse)
	{
		pulse = false;

		scale = (scale.x + doomb_get_percent_from(scale.x, 10), scale.y + doomb_get_percent_from(scale.y, 10) );
	}

	else
	{
		pulse = true;

		scale = (scale.x - doomb_get_percent_from(scale.x, 10), scale.y - doomb_get_percent_from(scale.y, 10) );
	}
}

static actor doomb_attach_flare(actor caller = null, statelabel type = null, vector3 offset = (0, 0, 0), double visual_size = 0.4)
{
	if(!doomb_show_flares)
		return null;

	if(caller && type)
	{
		actor f = spawn("doomb_flare_base", pos:caller.pos + offset);
		if(f)
		{
			f.setstatelabel(type);
			f.scale = (visual_size, visual_size);

			return f;
		}
	}

	return null;
}


states
{
	//{doomb_flare_base.doomb_attach_flare(self, "NewfagExplosionFlare");}
	NewfagExplosionFlare:
		FLAR AAAAAAAAAAAAAAAAA 1 BRIGHT light ("EXPLOSIONFLASH") A_FadeOut(0.11) ;
	stop;


	//{doomb_flare_base.doomb_attach_flare(self, "RedFlare");}
	RedFlare:
		LENR ABA 1 bright;
	stop;


	//{doomb_flare_base.doomb_attach_flare(self, "BlueFlare");}
	BlueFlare:
		LENB ABA 1 bright;
	stop;
	alternate_blue:
		L2NB A 2 bright;
	stop;

	//{doomb_flare_base.doomb_attach_flare(self, "GreenFlare");}
	GreenFlare:
		LENG A 2 bright;
	stop;
	alternate_green:
		L2NG A 2 bright;
	stop;


	//{doomb_flare_base.doomb_attach_flare(self, "YellowFlare");}
	YellowFlare:
		LENY A 2 bright light ("HUEHUE");
	stop;
	alternate_yellow:
		L2NY A 2 bright;
	stop;

	//{doomb_flare_base.doomb_attach_flare(self, "RocketFlare", visual_size: 0.6);}
	RocketFlare:
		LEYS O 2 BRIGHT;
	Stop;

	//{doomb_flare_base.doomb_attach_flare(self, "RedFlare22");}
	RedFlare22:
		L2NR A 2 bright;
	stop;


	//{doomb_flare_base.doomb_attach_flare(self, "lens_flare_white");}
	lens_flare_white:
		LENS A 5 bright;
	stop;

	//{doomb_flare_base.doomb_attach_flare(self, "lens_flare_yellow");}
	lens_flare_yellow:
		LEYS A 5 bright;
	stop;
	
	//{doomb_flare_base.doomb_attach_flare(self, "lens_flare_green");}
	lens_flare_green:
		LEYS G 8 bright;
	stop;

	//{doomb_flare_base.doomb_attach_flare(self, "lens_flare_orange");}
	lens_flare_orange:
		LEYS O 3 bright;
	stop;	
}

}