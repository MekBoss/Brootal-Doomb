
//===========================================================================
//
// Player
//
//===========================================================================
CLASS Doomer : doomber
{

Default {
	
	Speed 1.0;
	Health 100;
	Radius 16;
	Height 56;
	Mass 500;
	player.viewheight 44;
	player.attackzoffset 16;
	GibHealth 20;
	PainChance 255;
	+SOLID;
	+THRUSPECIES;
	+MTHRUSPECIES;
	+DONTHARMCLASS;
	+THRUGHOST;
	Species "Marines";
	BloodType "Player_Blood";
	damagefactor "Taunt", 0.0;
	
	//FIXME most defenitelly sometyhing nasty
	damagefactor "GreenBlood", 0.5;


	damagefactor "Shotgun", 0.5;
	damagefactor "SSG", 5.0;
	damagefactor "Bullet", 0.5;
	damagefactor "mini_gun", 0.33;
	damagefactor "Trample", 8.0;
	damagefactor "Kick", 3.0;
	damagefactor "Fatality", 5.0;
	damagefactor "CancelTeleportFog", 0.0;
	damagefactor "BHFTOnBarrel", 0.0;
	damagefactor "HelperMarineFatallity", 0.0;
	damagefactor "Leg", 0.0;
	damagefactor "SpawnMarine", 0.0;

	Player.ColorRange 112, 127;
	Player.StartItem "Rifle";
	Player.StartItem "Melee_Attacks";
	Player.StartItem "doomb_clip", 60;
	Player.StartItem "RifleAmmo", 31;
	Player.StartItem "DoubleRifleAmmo", 31;
	Player.StartItem "ShotgunAmmo", 8;
	Player.StartItem "PlasmaAmmo", 50;
	Player.StartItem "SSGAmmo", 2;
	Player.StartItem "RocketRounds", 6;
	Player.StartItem "RailgunAmmo", 50;
	Player.StartItem "HandGrenades", 1;
	Player.StartItem "GrenadeAmmo", 1;
	Player.StartItem "LeftRifleAmmo", 31;
	Player.StartItem "JustStartedGame", 1;
	Player.StartItem "NeverSelectedShotgun", 1;

	Player.JumpZ 7.4;
	Player.DisplayName "Modern";
	Player.CrouchSprite "PLYC";
}


States
{
	Spawn:
		MARN A 0 A_TakeInventory("IsInvisible", 1);
		MARN A 0 A_TakeInventory("ChainguyguyContinue", 1);
		MARN D 1;
		MARN A 0 doomb_destroy_fatality_camera();//Disable Camera.
		MARN D 1;
	
		TNT1 A 0 {bNOPAIN = false;}
	StandStill:
		MARN A 0 A_JumpIfInventory("ADSMode", 1, "ADSStand");

		MARN A 0 A_JumpIfInventory("GoSpecial", 1, "SpecialChecker");
		MARN A 0 {if(self && self.player && self.player.readyweapon && self.player.readyweapon.getclassname() == "Melee_Attacks") setstatelabel("FistsStand");}
		MARN DE 5;
		MARN B 0 A_JumpIfInventory("GoSpecial", 1, "SpecialCheckerMoving");
	Loop;


	See:
		MARN C 0 A_TakeInventory("ChainguyguyContinue", 1);
		MARN C 0 A_JumpIfInventory("ADSMode", 1, "ADSStand");
		MARN A 0 {if(self && self.player && self.player.readyweapon && self.player.readyweapon.getclassname() == "Melee_Attacks") setstatelabel("FistsStand");}
		MARN B 0 A_JumpIfInventory("GoSpecial", 1, "SpecialCheckerMoving");
		MARN A 4 A_SpawnItemEx("FootstepStrong", 0, 0, 40, 0, 0);
		MARN A 0 spawn_blood_footprint();

		MARN B 0 A_JumpIfInventory("GoSpecial", 1, "SpecialCheckerMoving");
		MARN B 4;

		MARN A 0 A_JumpIfInventory("GoSpecial", 1, "SpecialCheckerMoving");
		MARN C 4 A_SpawnItemEx("FootstepStrong", 0, 0, 40, 0, 0);
		MARN C 0 spawn_blood_footprint();
	Goto StandStill;


	IsJumpin:
		MARN A 1;
		tnt1 A 0 A_JumpIf (vel.z > 0, "InAir");
		tnt1 A 0 A_JumpIf (vel.z < 0, "InAir");
	Goto StandStill;
		
	InAir:
		MARJ A 1 A_JumpIf (vel.z == 0, "Land");
	Loop;
		
	Land:
		TNT1 A 0 A_SetPitch(+3.0 + pitch);
		MARN A 0 A_SpawnItem("FootStepStrong");
		TNT1 A 0 A_GiveInventory("ImpactMovesSling", 1);
		MARN AAA 1 A_SetPitch(-1.0 + pitch);
	Goto StandStill;
		
		
	Kick:
		tnt1 A 0 A_JumpIf (vel.z != 0, "AirKick");
		tnt1 A 0 A_TakeInventory("KickHasHit",1);
		PKIK ABCB 3 ;
	Goto StandStill;
	
	RifleKick:
		tnt1 A 0 A_TakeInventory("KickHasHit",1);
		tnt1 A 0 A_JumpIf (vel.z != 0, "AirKick");
		tnt1 A 0 A_TakeInventory("KickHasHit",1);
		PKI1 AB 3 ;
		PKI1 CB 3 A_JumpIfInventory("KickHasHit", 1, "KickHit");
		tnt1 A 0 A_TakeInventory("Kicking",1);
		Goto StandStill;
		
	AirKick:
		AKIK AAAAA 2 A_JumpIfInventory("KickHasHit", 1, "KickHit");
		tnt1 A 0 A_TakeInventory("Kicking",1);
		Goto StandStill;
		
	Punch://melee punch
		PLA1 H 1;
		tnt1 A 0 A_JumpIfInventory("GotMeatShield", 1, "MeatShieldChecker");
		tnt1 A 0 A_JumpIfInventory("GoSpecial", 1, "SpecialChecker");
		PLA1 H 1;
		PLA1 E 4;
		tnt1 A 0 A_JumpIfInventory("GotMeatShield", 1, "MeatShieldChecker");
		tnt1 A 0 A_JumpIfInventory("GoSpecial", 1, "SpecialChecker");
	Goto StandStill;
		
	SayOneLiner:
		MARN A 1;
		tnt1 A 0 A_PlaySound("ONELIN", 2);
		Goto StandStill;
		
	AdvancedTaunt:
		MARN A 1;
		tnt1 A 0 A_PlaySound("TAUNT0", 2);
		Goto StandStill;
		
	FistTaunt:
		tnt1 A 0 A_PlaySound("MTAUN", 2);
		Goto StandStill;
		
		
	Roll_Right:
		PROL E 4
		{
			bNOPAIN = true;
			doomb_init_fatality_camera();//Start Camera//Start Camera
			
			Vel.X += 20 * Cos(angle - 90);
			Vel.Y += 20 * Sin(angle - 90);
		}
		PROL DCBA 4;
		MARN A 0 doomb_destroy_fatality_camera();//Disable Camera.
		MARN A 4;
		tnt1 A 0 {bNOPAIN = false;}
		TNT1 A 0 A_GiveInventory("ImpactMovesSling", 1);
	Goto StandStill;
		
	roll_left:
		PROL A 4
		{
			bNOPAIN = true;
			doomb_init_fatality_camera();//Start Camera//Start Camera
			Vel.X += 20 * Cos(angle + 90);
			Vel.Y += 20 * Sin(angle + 90);
		}
		PROL BCDE 4;
		MARN A 0 doomb_destroy_fatality_camera();//Disable Camera.
		MARN A 4;
		tnt1 A 0 {bNOPAIN = false;}
		TNT1 A 0 A_GiveInventory("ImpactMovesSling", 1);
	Goto StandStill;
		
		
	Pump:
		PLAY ABCD 4;
	Goto See;
	
	NoMovePump:
		PLAY B 12;
	Goto See;
		
	FistsStand:
		tnt1 A 0 A_JumpIfInventory("HasImpShield", 1, "SeeImpShield");
		tnt1 A 0 A_JumpIfInventory("HasZmanShield", 1, "SeeZmanShield");
		tnt1 A 0 A_JumpIfInventory("HasSguyShield", 1, "SeeSguyShield");
		tnt1 A 0 A_JumpIfInventory("HasBarrel", 1, "BarrelStand");

		MARN A 0 A_JumpIfInventory("GoSpecial", 1, "SpecialChecker");
		tnt1 A 0 doomb_destroy_fatality_camera();
		tnt1 A 0 A_JumpIf (vel.xy != (0, 0), "FistsMove");
		PLA1 B 5;
	Goto StandStill;
		
		
	FistsMove:
		tnt1 A 0 doomb_destroy_fatality_camera();
		tnt1 A 0 A_JumpIfInventory("GoSpecial", 1, "SpecialCheckerMoving");
		tnt1 A 0 A_JumpIfInventory("GotMeatShield", 1, "MeatShieldChecker");
		PLA1 ABCD 5;
		tnt1 A 0 A_JumpIf (vel.xy == (0, 0), "FistsMove");
	Goto See;
		
		
		
	ADSStand:
		MAR2 A 5;
		tnt1 A 0 A_JumpIf (vel.xy != (0, 0), "ADSMove");
		MAR2 A 0 doomb_destroy_fatality_camera();
		MAR2 A 5;

		MARN A 0 A_JumpIfInventory("GoSpecial", 1, "SpecialChecker");
		tnt1 A 0 A_JumpIf (vel.xy != (0, 0), "ADSMove");
		MAR2 D 5;
		tnt1 A 0 A_JumpIf (vel.xy != (0, 0), "ADSMove");
		MAR2 D 5;
		tnt1 A 0 A_JumpIf (vel.xy != (0, 0), "ADSMove");
	Goto StandStill;
		
	ADSMove:
		MAR2 A 5 A_JumpIfInventory("Kicking", 1, "Kick");
		MAR2 B 5 A_JumpIfInventory("Kicking", 1, "Kick");

		MARN A 0 A_JumpIfInventory("GoSpecial", 1, "SpecialChecker");
		MAR2 A 0 A_SpawnItemEx("FootstepStrong", 0, 0, 40, 0, 0);
		MAR2 C 5 A_JumpIfInventory("Kicking", 1, "Kick");
		MAR2 B 5 A_JumpIfInventory("Kicking", 1, "Kick");
		MAR2 A 0 A_SpawnItemEx("FootstepStrong", 0, 0, 40, 0, 0);
		tnt1 A 0 A_JumpIf (vel.xy != (0, 0), "spawn");
	Goto See;
		
		
	BarrelMove:
		tnt1 A 0 A_JumpIf (vel.xy == (0, 0), "BarrelStand");
		PBAR AB 8;
		tnt1 A 0 A_SpawnItemEx("FootstepStrong", 0, 0, 40, 0, 0);
		PBAR CB 8;
	Goto See;
		
	BarrelStand:
		PBAR A 1;
		tnt1 A 0 A_JumpIf (vel.xy != (0, 0), "BarrelMove");
	Goto StandStill;
		
		
		
	Death:

		tnt1 A 0 A_Jump (160, 3);
		Goto Death.Arm;
		tnt1 AAA 0;
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		TNT1 A 0 doomb_much_blood();
		PLAY H 10;
		PLAY I 10 A_PlayerScream;
		PLAY J 10 A_NoBlocking;
		PLAY KLM 10;
		tnt1 A 0 doomb_spawn_bloodpool();
		PLAY N -1;
		Stop;




	// This section is responsable for calling scripts to make blood
	// drip on the screen when the player is affected by one of the actors
	// in the BLOODSPLASH lump.
	
Pain.Blood:
	tnt1 A 0 A_Giveinventory("BloodOnVisor",1);
	tnt1 A 0 A_GiveInventory("MeatAmmo", 1);
	tnt1 A 0 ACS_Execute(random(580, 585), 0, 0, 0, 0);
Goto StandStill;

Pain.BlueBlood:
	//tnt1 A 0 A_Giveinventory("BlueBloodOnVisor",1);
	tnt1 A 0 A_Giveinventory("health",1);
	tnt1 A 0 ACS_Execute(random(570, 575), 0, 0, 0, 0);
Goto StandStill;
	
Pain.GreenBlood:
	//tnt1 A 0 A_Giveinventory("GreenBloodOnVisor",1);
	tnt1 A 0 A_Giveinventory("health",1);
	tnt1 A 0 ACS_Execute(random(560, 565), 0, 0, 0, 0);
Goto StandStill;
	
	Pain:
		tnt1 A 0 A_setblend("70, 00, 00", 0.2, 34);
		tnt1 A 0 A_Pain;
		MARN A 0 {if(self && self.player && self.player.readyweapon && self.player.readyweapon.getclassname() == "Melee_Attacks") setstatelabel("FistsStand");}
		TNT1 A 0 A_GiveInventory("ImpactMovesSling", 1);
		tnt1 A 0 A_PlaySound("PAIN1", 2);
		PLAY G 5;
		Goto See;
		
	PainWfist:
		tnt1 A 0 A_JumpIfInventory("HasImpShield", 1, "SeeImpShield");
		tnt1 A 0 A_JumpIfInventory("HasZmanShield", 1, "SeeZmanShield");
		tnt1 A 0 A_JumpIfInventory("HasSguyShield", 1, "SeeSguyShield");
		PLA1 G 5;
		tnt1 A 0 A_PlaySound("PAIN1", 2);
	Goto StandStill;
		
		
	Pain.Blast:
	Pain.Explosive_Impact:
		tnt1 A 0 A_PlaySound("PAIN1", 2);
		tnt1 A 0 ACS_Execute(531, 0, 0, 0, 0);
		TNT1 A 0 ThrustThingZ(0, 20, 1, 0);
		Goto Pain;
		
		
	Pain.Bullet:
	Pain.MonsterMinigunBullet:
	Pain.Shotgun:
	Pain.SSG:
	Pain.mini_gun:
		//Scripts 611 to 616 are responsible for making the bullet damage effect on screen
		tnt1 A 0 A_PlaySound("PAIN1", 2);
		tnt1 A 0 ACS_Execute(random(611, 616), 0, 0, 0, 0);
	Goto Pain;
		
		
		
	Pain.ImpFatalityMarine:
	Pain.Rip:
		tnt1 A 0 A_PlaySound("PAIN1", 2);
		tnt1 A 0 ACS_Execute(530, 0, 0, 0, 0);
		tnt1 A 0 ACS_Execute(617, 0, 0, 0, 0);
	Goto Pain;




	Death.Eat:
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		tnt1 A 0 A_GiveToTarget("EatMe",1);
		TNT1 A 0 doomb_spawn_entrails( (0, 0, random(30, 35) ) );
		TNT1 A 0 doomb_much_blood();
		XPL1 A 10 A_XScream;
		XPL1 B 20 A_NoBlocking;
		XPL1 CDE 10;
		tnt1 A 0 doomb_spawn_bloodpool();
		PPOD A 0 A_SpawnItemEx("MarineEattenByDemon", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION);
		tnt1 A -1;
	Stop;
		
	Death.Cut:
	Death.Saw:
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		TNT1 A 0 doomb_spawn_entrails( (0, 0, random(30, 35) ) );
		tnt1 A 0 A_SpawnProjectile ("XDeathHalfMarine", 50, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 doomb_much_blood();
		XPL2 A 10 A_XScream;
		tnt1 AA 0 doomb_spawn_big_blood(50);
		XPL2 B 20 A_NoBlocking;
		tnt1 AA 0 doomb_spawn_big_blood(50);
		XPL2 C 10 doomb_spawn_big_blood (40);
		tnt1 AA 0 doomb_spawn_big_blood(30);
		XPL2 DE 10 doomb_spawn_big_blood(20);
		tnt1 A 0 doomb_spawn_bloodpool();
		XPL2 E -1;
		Stop;
		
	Death.Slime:
		tnt1 A 0 A_PlaySound("BIGSCREA");
		tnt1 A 0 A_Takeinventory("Kicking",1);
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		PMET AABBCCDDEEFFGGHHIIIII 10 doomb_show_effect("ExplosionSmoke", (0, 0, 20), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
		PMET IIIIIIIIIIJJJJJJJJJJJJJJJJJJJJJJKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLL 3 doomb_show_effect("ExplosionSmoke", (0, 0, 20), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
		tnt1 A 0 A_NoBlocking;
		tnt1 A -1;
		Stop;
		
	Death.mini_gun:
		tnt1 A 0 A_Takeinventory("Kicking",1);
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		tnt1 A 0 A_Scream;
		tnt1 A 0 A_Stop;
		tnt1 A 0 A_GiveInventory("ChainguyguyContinue", 1);
		tnt1 A 0 A_PlaySound("DSFDTHE");
		PLAY H 5;
		tnt1 A 0 A_GiveInventory("ChainguyguyContinue", 1);
		PPOD A 0 A_SpawnItemEx("PlayerChaingunguyVictim", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION);
		tnt1 A 200;
		tnt1 A 0 A_NoBlocking;
		tnt1 A 0 A_TakeInventory("ChainguyguyContinue", 1);
		tnt1 A -1;
	Stop;
		
	Death.Rip:
		tnt1 A 0 A_Takeinventory("Kicking",1);
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		TNT1 A 0 doomb_much_blood();
		XPL3 A 10 A_XScream;
		TNT1 A 0 doomb_much_blood();
		XPL3 B 20 A_NoBlocking;
		XPL3 C 10 doomb_much_blood();
		XPL3 D 10 doomb_much_blood(40);
		XPL3 E 10 doomb_much_blood(30);
		XPL3 F 10 doomb_much_blood(20);
		XPL3 F 10 doomb_much_blood(10);
		tnt1 A 0 doomb_spawn_bloodpool();
		XPL3 F -1;
		Stop;
		
	XDeath:
		tnt1 A 0 A_Takeinventory("Kicking",1);

		tnt1 A 0 ThrustThingZ(0,60,0,1);
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION);
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION);
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION);
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION);
		tnt1 A 0 A_SpawnProjectile ("MeatDeath", 0, 0, random (0, 360), 2, random (0, 160));
		tnt1 A 0 ACS_Execute(580, 0, 0, 0, 0);//ACS 580 to 585 is the blood driping on screen
		tnt1 A 0 ACS_Execute(581, 0, 0, 0, 0);
		tnt1 A 0 ACS_Execute(582, 0, 0, 0, 0);
		tnt1 A 0 ACS_Execute(583, 0, 0, 0, 0);
		tnt1 A 0 ACS_Execute(584, 0, 0, 0, 0);
		tnt1 A 0 ACS_Execute(585, 0, 0, 0, 0);
		MHEA A 0 A_XScream;
		MHEA B 0 A_NoBlocking;
		//MHEA E -1
		tnt1 A 0 A_SpawnProjectile ("XDeathArm1", 32, 0, random (0, 360), 2, random (0, 90));
		tnt1 a 0 doomb_spawn_bloodpool();
		tnt1 AAAAA 0 doomb_severed_limb("Intestine", "spawn", (0, 0, 32), (frandom(-10, 10), frandom(-10, 10), frandom(0, 10) ) );
		XDMG E 1;
		TNT1 a 0 doomb_spray_decal("BrutalBloodSuper", times: 5);
		TNT1 A 0 doomb_blood_mist('doomb_non_interactive_blood', 'blood_mist', (0, 0, 5), 6);
		XDMG E -1;
	Stop;
		
	Death.punch:
	Death.Blast:
	Death.SSG:
		tnt1 A 0 A_Takeinventory("Kicking",1);
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		POSS Q 2 A_FaceTarget;
		TNT1 A 0 doomb_spawn_entrails( (0, 0, random(30, 35) ) );
		tnt1 AAAA 0 doomb_for_khorne("doomb_non_interactive_blood", "red_blood_trail", (0, 0, random(20, 30) ), (frandom(-5, 5), frandom(-5, 5), frandom(0, 5) ) );
		tnt1 AAAA 0 doomb_for_khorne("doomb_non_interactive_blood", "red_blood_trail", (0, 0, 32 ), (frandom(-5, 5), frandom(-5, 5), frandom(0, 5) ) );
		tnt1 AAAA 0 doomb_for_khorne("doomb_non_interactive_blood", "red_blood_trail", (0, 0, random(20, 30) ), (frandom(-5, 5), frandom(-5, 5), frandom(0, 5) ) );
		TNT1 a 0 doomb_spray_decal("BrutalBloodSuper", times: 5);
		tnt1 A 0 A_SpawnProjectile ("XDeathArm1", 32, 0, random (170, 190), 2, random (0, 40));
		TNT1 A 0 doomb_blood_mist('doomb_non_interactive_blood', 'blood_mist', (0, 0, 22), 6);
		XPL2 A 10 A_XScream;
		tnt1 AA 0 doomb_spawn_big_blood (50);
		XPL2 B 20 A_NoBlocking;
		tnt1 AA 0 doomb_spawn_big_blood(50);
		XPL2 C 10 doomb_spawn_big_blood(40);
		tnt1 AA 0 doomb_spawn_big_blood( 30);
		XPL2 DE 10 doomb_spawn_big_blood( 20);
		tnt1 A 0 doomb_spawn_bloodpool();
		XPL2 E -1;
	Stop;
		
	Death.Rape:
		tnt1 A 0 A_Jump (160, 1);
		Goto Death.Arm;
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		TNT1 A 0 doomb_much_blood();
		XPL4 A 20 A_XScream;
		TNT1 A 0 doomb_spawn_entrails( (0, 0, random(30, 35) ) );
		TNT1 A 0 doomb_much_blood();
		TNT1 A 0 A_NoBlocking;
		XPL4 BCDEFF 20 doomb_much_blood();
		tnt1 A 0 doomb_spawn_bloodpool();
		XPL4 F -1;
	Stop;
		
		
	Death.Arm:
		tnt1 A 0 A_Takeinventory("Kicking",1);
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		TNT1 A 0 doomb_spawn_entrails( (0, 0, random(30, 35) ) );
		tnt1 A 0 A_SpawnProjectile ("XDeathArm1", 50, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 doomb_much_blood();
		tnt1 A 0 A_Scream;
		XPL5 A 10;
		tnt1 A 0 A_NoBlocking;
		tnt1 A 0 A_PlaySound("DSFDTHE");
		XPL5 BCBCBCBC 10 doomb_much_blood(25);
		XPL5 DE 7 doomb_much_blood(15);
		tnt1 A 0 doomb_spawn_bloodpool();
		XPL5 E -1;
	Stop;
		
		
	Death.punch:
	Death.Explosive_Impact:
		tnt1 A 0 A_Takeinventory("Kicking",1);

		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		tnt1 A 0 ThrustThingZ(0,30,0,1);
		tnt1 A 0 A_SpawnProjectile ("jaw", 50, 0, random (0, 360), 2, random (0, 160));
		tnt1 A 0 A_SpawnProjectile ("eye", 50, 0, random (0, 360), 2, random (0, 160));
		tnt1 A 0 A_SpawnProjectile ("head_piece", 50, 0, random (0, 360), 2, random (0, 160));
		tnt1 A 0 A_SpawnProjectile ("head_piece", 50, 0, random (0, 360), 2, random (0, 160));
		tnt1 AAAA 0 A_SpawnProjectile ("SmallBrainPiece", random (45, 55), random (5, -5), random (170, 190), 2, random (0, 40));
		tnt1 AAAA 0 A_SpawnProjectile ("SmallBrainPiece", 50, 0, random (0, 360), 2, random (0, 160));
		TNT1 a 0 doomb_spray_decal("BrutalBloodSuper", times: 5);
		tnt1 AAAAAAAAAAA 0 A_SpawnProjectile ("Brutal_Blood", 50, 0, random (0, 360), 2, random (0, 160));
		tnt1 A 0 A_SpawnProjectile ("XDeathArm1", 35, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 doomb_spawn_entrails( (0, 0, random(30, 35) ) );
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION);
		tnt1 A 0 A_XScream;
		XPL6 A 5;
		tnt1 A 0 A_NoBlocking;
		XPL6 BCDE 5;
		XPL6 F -1;
	Stop;
		
	
	Death.Plasma: Death.Plasma2:
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		PBR1 A 6 A_Scream;
		tnt1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnProjectile ("Ashes1", 32, 0, random (0, 360), 2, random (0, 180));
		tnt1 AAAA 0 doomb_show_effect("BluePlasmaFire", (0, 0, 32), (frandom(-0.3, 0.3), frandom(-0.3, 0.3), frandom(0.5, 1) ) );
		PBR1 B 6 A_NoBlocking;
		PBR1 CDEFGH 6 A_SpawnProjectile ("Blood", 10, 0, random (0, 360), 2, random (0, 160));
		PBR1 HHHHHHHHHHHHHHHHHHHHHH 8 doomb_show_effect("ExplosionSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
		PBR1 H -1;
	Stop;
	
	Death.Fire:
		tnt1 a 0 a_jump(128,"fire_death_1");
		tnt1 A 0 A_Takeinventory("Kicking",1);
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		PBUR A 1;
		PBUR A 1 A_PlayerScream;
		PBUR A 1 A_NoBlocking;
		PBUR AAAABBBBCCCCDDDDEEEEEEEEE 2 doomb_show_effect("FlameTrails", ( 0, 0, 32 - 3 * frame), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ) );

		PBUR EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 6 doomb_show_effect("ExplosionSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
		PBUR E -1;
	Stop;
	
	fire_death_1:

		tnt1 A 0 A_Takeinventory("Kicking",1);
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		tnt1 A 0 A_Scream;
		tnt1 A 0 A_NoBlocking;
		TNT1 A 0 A_PlaySound("DSFDTHE");
		BUR2 A 1 BRIGHT;
		BUR2 AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQ 3 BRIGHT light("BIGREDTORCH")
		{
			A_Explode(3,30, damagetype:"fire");
			{doomb_flare_base.doomb_attach_flare(self, "RedFlare");}
			doomb_show_effect("ExplosionSmoke", (0, 0, 20), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
			doomb_show_effect("SmallFireTrail", velocity:(frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0, 2) ) );
		}
		TNT1 A 0 A_PlaySound("DSFDTHE");
		BURN RRSSTTSSRRSSTTSSRRSSTTRRSSTTSSRRSSTTSSRRSSTTSSTTUU 3 BRIGHT light("BIGREDTORCH")
		{
				A_Explode(3,30, damagetype:"fire");
				{doomb_flare_base.doomb_attach_flare(self, "RedFlare");}
				doomb_show_effect("ExplosionSmoke", (0, 0, 20), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
				doomb_show_effect("SmallFireTrail", velocity:(frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0, 2) ) );
		}
		TNT1 A 0 doomb_show_effect("SmallFireFocus24", (frandom(-0.5, 0.5), frandom(-0.5, 0.5), 0 ) );
		BURN VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV 9 doomb_show_effect("ExplosionSmoke", (0, 0, 20), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
		BURN V -1;
	Stop;

	Death.Desintegrate:
		tnt1 A 0 A_Takeinventory("Kicking",1);
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		TNT1 A 0 A_XScream;
		TNT1 A 0 A_NoBlocking;
		TNT1 AAAA 0 doomb_for_khorne("doomb_non_interactive_blood", "red_blood_trail", (0, 0, random(20, 30) ), (frandom(-5, 5), frandom(-5, 5), frandom(0, 5) ) );
		TNT1 AAAA 0
		{
			actor a = doomb_for_khorne("doomb_non_interactive_blood", "blood_impact_splash", (0, 0, 35 ) );
			if(a)
				a.scale = (0.45, 0.45);
		}
		TNT1 A 0 doomb_spawn_entrails( (0, 0, random(30, 35) ) );
		TNT1 AAA 0 doomb_severed_limb("Intestine", "spawn", (0, 0, 24), (frandom(-10, 10), frandom(-10, 10), frandom(0, 10) ) );
		TNT1 A 0 doomb_spawn_bloodpool();
		TNT1 A 0 doomb_blood_mist('doomb_non_interactive_blood', 'blood_mist', (0, 0, 35), 6);
		ID50 ABCDEF 7;
		ID50 GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 13 doomb_show_effect("ExplosionSmoke", (0, 0, 20), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
		ID50 G -1;
	Stop;
	
	Death.Stomp:
		TNT1 A 0 doomb_blood_mist('doomb_non_interactive_blood', 'blood_mist', (0, 0, 5), 6);
		TNT1 A 0 doomb_spawn_entrails( (0, 0, random(30, 35) ) );
		tnt1 A 0 A_SpawnItem ("CrushedRemains");
		tnt1 A 1;
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		tnt1 A 1 A_XScream;
		tnt1 A 1 A_NoBlocking;
		tnt1 A -1;
	Stop;
	
	Crush:
		tnt1 A 0 A_PlaySound("misc/xdeath4");
		CRS1 A -1;
	Stop;
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	// FATALITIES
	Death.Fatality:
		tnt1 A 0 A_NoBlocking;
		tnt1 A 0 A_Scream;
		tnt1 A 0 A_GiveToTarget("GoFatality", 1);
		tnt1 A 0 A_GiveToTarget("PVPFatality", 1);
		tnt1 A -1;
	Stop;

	FatalityPVP:
	
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		//////////////////////////////////////////////////////
		PVPF ABB 10;
		PVPF C 4;
		PVPF D 4;
		tnt1 a 0 Radius_Quake (4, 24, 0, 15, 0);
		PVPF E 4;
		tnt1 A 0 A_SpawnProjectile ("MeatDeath", 50, 0, random (0, 360), 2, random (0, 160))       ;
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 50);
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 50);
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 50);
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 50);
		tnt1 AA 0 A_SpawnProjectile ("XDeathArm1", 42, 0, random (0, 360), 2, random (0, 90));
		PVPF EFGGGG 4;
		//////////////////////////////////////////////////////
		tnt1 A 0 A_TakeInventory("PVPFatality",1);
		tnt1 A 0 A_TakeInventory("GoFatality", 1);
		tnt1 A 0 A_GiveInventory("Megasphere",1);
		MARN A 0 doomb_destroy_fatality_camera();//Stop Camera
	
	Goto StandStill;
	
	
	
	
	
	
	// STEALTH KILLS
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	// Monsters that can perform fatality on player:
	
	
	// Baron and Hell Knight:
Death.HKFT:
Death.BHFT:
Death.RVFT:
	tnt1 A 1 A_PlayerScream;
	tnt1 A 1 A_NoBlocking;
	tnt1 A 0 A_GiveToTarget("Curbstomp_Marine",1);
	tnt1 A -1;
	Stop;
	
	//Imp:
Death.ImpFatalityMarine:
	tnt1 A 1 A_PlayerScream;
	tnt1 A 1 A_NoBlocking;
	tnt1 A 0 A_GiveToTarget("Fatality_Marine",1);
	tnt1 A 500;
	tnt1 A -1;
	Stop;
	
	
	
	
	
	
	
	
	
	
	//When you get MeatShields
	
	
GotImpShield:
	tnt1 A 0 A_TakeInventory("MeatAmmo", 100);
	tnt1 A 0 A_GiveInventory("ImpShield");
	tnt1 A 0 A_SelectWeapon("ImpShield");
	Goto SeeImpShield;
	
	
SeeImpShield:
	MAIS AB 8;
	Loop;
	
	
	
GotZmanShield:
	tnt1 A 0 A_TakeInventory("MeatAmmo", 100);
	tnt1 A 0 A_GiveInventory("ZmanShield");
	tnt1 A 0 A_SelectWeapon("ZmanShield");
	Goto SeeZmanShield;
	
	
SeeZmanShield:
	MAZS A 8;
	MAZS B 8;
	Loop;
	
	
GotSguyShield:
	tnt1 A 0 A_TakeInventory("MeatAmmo", 100);
	tnt1 A 0 A_GiveInventory("SguyShield");
	tnt1 A 0 A_SelectWeapon("SguyShield");
	Goto SeeSGuyShield;
	
SeeSGuyShield:
	MASS A 8;
	MASS B 8;
	Loop;
	
	
	
	
	
	
	
	
Salutes1:
	tnt1 A 0 A_PlaySound ("DSSALUTE");
	MWAV BCDEFEFDCB 7;
	Goto StandStill;
	
Salutes2:
	tnt1 A 0 A_PlaySound ("DSSALUTE");
	MWAV IJK 4;
	MWAV LMNNML 3;
	MWAV LMNNML 3;
	MWAV LMNNML 3;
	MWAV KJI 4;
Goto StandStill;
	
	
	
	//Special Checkers
	
	
SpecialChecker:
	tnt1 A 1;
	tnt1 A 0 A_TakeInventory("GoSpecial", 1);
	tnt1 A 0 A_JumpIfInventory("HasBarrel", 1, "BarrelStand");
	tnt1 A 0 A_JumpIfInventory("Kicking", 1, "RifleKick");
	tnt1 A 0 A_JumpIfInventory("ADSMode", 1, "ADSStand");
	tnt1 A 0 A_TakeInventory("GoSpecial", 1);
	Goto StandStill ;
	
	
SpecialCheckerMoving:
	tnt1 A 1;
	tnt1 A 0 A_TakeInventory("GoSpecial", 1);
	tnt1 A 0 A_JumpIfInventory("GotMeatShield", 1, "MeatShieldChecker");
	tnt1 A 0 A_JumpIfInventory("HasBarrel", 1, "BarrelMove");
	tnt1 A 0 A_JumpIfInventory("Kicking", 1, "RifleKick");
	tnt1 A 0 A_JumpIfInventory("ADSMode", 1, "ADSMove");
	tnt1 A 0 A_JumpIfInventory("HasImpShield", 1, "SeeImpShield");
	tnt1 A 0 A_JumpIfInventory("HasZmanShield", 1, "SeeZmanShield");
	tnt1 A 0 A_JumpIfInventory("HasSguyShield", 1, "SeeSguyShield");
	tnt1 A 0 A_TakeInventory("GoSpecial", 1);
	Goto See   ;
	
	FatalityChecker:
		tnt1 A 0 doomb_init_fatality_camera();//Start Camera
		tnt1 A 0 A_JumpIfInventory("PVPFatality", 1, "FatalityPVP");
	Goto See;
	
	
	
	MeatShieldChecker:
		tnt1 A 1;
		tnt1 A 0 A_TakeInventory("GoSpecial", 1);
		tnt1 A 0 A_JumpIfInventory("HasImpShield", 1, "GotImpShield");
		tnt1 A 0 A_JumpIfInventory("HasZmanShield", 1, "GotZmanShield");
		tnt1 A 0 A_JumpIfInventory("HasSguyShield", 1, "GotSguyShield");
		tnt1 A 0 A_TakeInventory("GoSpecial", 1);
	Goto See;
	
MeatShieldCheckerMoving:
	tnt1 A 1;
	//tnt1 A 0 A_TakeInventory("GotMeatShield", 1)
	tnt1 A 0 A_TakeInventory("GoSpecial", 1);
	tnt1 A 0 A_JumpIfInventory("HasImpShield", 1, "GotImpShield");
	tnt1 A 0 A_JumpIfInventory("HasZmanShield", 1, "GotZmanShield");
	tnt1 A 0 A_JumpIfInventory("HasSguyShield", 1, "GotSguyShield");
	tnt1 A 0 A_TakeInventory("GoSpecial", 1);
	Goto StandStill;
}






}




CLASS BloodOnVisor : PowerupGiver{ 
Default {
Inventory.Amount 1;
Scale 0.5;
Inventory.MaxAmount 10;
Powerup.Type "PowerBloodOnVisor";
Powerup.Duration 9;
Inventory.Icon "TNT1A0";
+INVENTORY.AUTOACTIVATE;
+INVENTORY.ALWAYSPICKUP;
Inventory.MaxAmount 0;
}
States
{
Spawn:
	tnt1 A 1;
	Stop;
} 
} 

CLASS PowerBloodOnVisor : PowerUp { 
Default {

Powerup.Duration 9;
Speed 0.4;
Inventory.Icon "TNT1A0";
}
}



CLASS BlueBloodOnVisor : PowerupGiver { 
Default {

Inventory.Amount 1;
Scale 0.5;
Inventory.MaxAmount 10;
Powerup.Type "powerBlueBloodOnVisor";
Powerup.Duration 9;
Inventory.Icon "TNT1A0";
+INVENTORY.AUTOACTIVATE;
+INVENTORY.ALWAYSPICKUP;
Inventory.MaxAmount 0;
}
States
{
Spawn:
	tnt1 A 1;
	Stop;
} 
} 

CLASS PowerBlueBloodOnVisor : PowerUp { 
Default {

Powerup.Duration 9;
Speed 0.4;
Inventory.Icon "TNT1A0";
}
}


CLASS GreenBloodOnVisor : PowerupGiver { 
Default {

Inventory.Amount 1;
Scale 0.5;
Inventory.MaxAmount 10;
Powerup.Type "powerGreenBloodOnVisor";
Powerup.Duration 9;
Inventory.Icon "TNT1A0";
+INVENTORY.AUTOACTIVATE;
+INVENTORY.ALWAYSPICKUP;
Inventory.MaxAmount 0;
}
States
{
Spawn:
	tnt1 A 1;
	Stop;
} 
} 

CLASS PowerGreenBloodOnVisor : PowerUp { 
Default {

Powerup.Duration 9;
Speed 0.4;
Inventory.Icon "TNT1A0";
}
}


CLASS ChainguyguyContinue : Inventory { 
Default {

inventory.maxamount 1;
}
}


CLASS ComeEatMeDemon : Inventory { 
Default {

inventory.maxamount 1;
}
}





CLASS MarineEattenByDemon: CurbstompedMarine { 
Default {

Health 100;
Height 16;
Radius 8;
MONSTER;
-GHOST;
+THRUACTORS;
+FRIENDLY;
}
States

{
Spawn:
	tnt1 A 0 nodelay A_GiveInventory("ComeEatMeDemon");
	tnt1 A 0 doomb_spawn_bloodpool();
	XPL1 EEE 6 ;
	XPL1 E -1;
stop;
}

}	   
	

CLASS JustStartedGame : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS NeverSelectedShotgun : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS FootStep : ACTOR { 
Default {
	
	Radius 10;
	Height 10;
	Speed 7;
	Projectile;
	-NOGRAVITY;
	+MISSILE;
	+NOTELEPORT;
	+CLIENTSIDEONLY;
	+MOVEWITHSECTOR;
	+NOEXTREMEDEATH;
	DamageType "Trample";
	Damage 0;
	+NODAMAGETHRUST;
	+BLOODLESSIMPACT;
	+THRUACTORS;
	gravity 40;
	mass 1000;
	Obituary "%o was trampled by %k.";
}
States
{
	Spawn:
		tnt1 A 2;
	stop;
}
}



CLASS FootstepStrong: FootStep { 
Default {
	
	Speed 0;
	Radius 16;
	Damage 15;
	Damagefunction (random (2, 3));
	-CLIENTSIDEONLY;
}
States
{
	Spawn:
	Death:
	Crash:
		tnt1 A 1;
		TNT1 A 0 {if(waterlevel > 1) A_SpawnItem("LargeMassWaterImpact");}
		tnt1 A 0 A_Explode(60,5,0);
		stop;
}
}



CLASS HeavyFootSteps32: FootStep { 
Default {
	
	Damage 1;
	-CLIENTSIDEONLY;
	DamageType "Stomp";
	Obituary "%o was trampled by a Cyberdemon.";
}
States
{
	Spawn:
		tnt1 A 2 nodelay A_Explode(900,10,0);
	stop;
}
}



CLASS GoFatality : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS GoSpecial : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS GotMeatShield : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS PVPFatality : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}



CLASS HasImpShield : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS HasZManShield : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS HasSGuyShield : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}






CLASS Taunting : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS Enraged : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS Curbstomp_Marine : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS Fatality_Marine : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS SSGAlt : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS IsJumping : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS IsDown : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}


CLASS HasBarrel : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}