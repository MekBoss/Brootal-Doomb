// Invulnerability Sphere ---------------------------------------------------

CLASS InvulnerabilitySphere_  : PowerupGiver Replaces InvulnerabilitySphere { 
	Default {
		
		+COUNTITEM;
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;
		+INVENTORY.BIGPOWERUP;
		Inventory.MaxAmount 0;
		Powerup.Type "PowerInvulnerable";
		Powerup.Color "White";//InverseMap
		Inventory.PickupMessage "$GOTINVUL";
	}
	States
	{
		Spawn:
			PINV AAABBBCCCDDD 2 Bright A_SpawnItem("GreenFlareMedium",0,20);
			Loop;
	}
}




// Soulsphere --------------------------------------------------------------

CLASS LifeSphere : doomb_inventory Replaces SoulSphere { 
	Default {
		
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "Soulsphere";
		Inventory.PickupSound "misc/p_pkup";
	}
	States
	{
		Spawn:
			TNT1 A 0 A_CheckSight("Spawn2");
			SOUL AAABBBCCCDDDCCCBBB 2 Bright A_SpawnItem("BlueFlareMedium2",0,20);
			Loop;
		Spawn2:
			SOUL ABCDCB 2 BRIGHT;
			Goto Spawn;
		Pickup:
			TNT1 AAAAAAAAAAAAA 0 {invoker.doomb_show_effect("AltSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (frandom(1.8, 2.2), 0) );}
			TNT1 A 0 A_GiveInventory("SoulSphereHealth", 1);
			Stop;
	}
}

CLASS SoulSphereHealth : Health	 { 
	Default {
		
		Inventory.Amount 100;
		Inventory.MaxAmount 200;
		+INVENTORY.ALWAYSPICKUP;
	}
}

CLASS EnergySphere : doomb_inventory Replaces Megasphere { 
	Default {
		
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "Megasphere";
		Inventory.PickupSound "misc/p_pkup";
	}
	States
	{
		Spawn:
			TNT1 A 0 A_CheckSight("Spawn2");
			MEGA AABBCCDD 2 BRIGHT A_SpawnItem("LensFlare",0,35);
			Loop;
		Spawn2:
			MEGA AABBCCDD 2 BRIGHT;
			Goto Spawn;
		Pickup:
			TNT1 AAAAAAAAAAAAA 0 {invoker.doomb_show_effect("AltSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (frandom(1.8, 2.2), 0) );}
			TNT1 A 0 A_GiveInventory("BlueArmorForMegasphere", 1);
			TNT1 AA 0 A_GiveInventory("SoulsphereHealth", 1);
			Stop;
	}
}	


// infrared -----------------------------------------------------------------

CLASS NightVision : CustomInventory Replaces InfraRed { 
	Default {
		
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "You got the Infrared Vision Googles.";
	}
	States
	{
		Spawn:
			TNT1 A 0 A_CheckSight("Spawn2");
			SVIS E 7;
			SVIS D 3 Bright A_SpawnItem("RedFlareVerySmall",0,10);
			SVIS C 2 Bright A_SpawnItem("RedFlareVerySmall",0,10);
			SVIS BAB 1 Bright A_SpawnItem("RedFlareVerySmall",0,10);
			SVIS C 2 Bright A_SpawnItem("RedFlareVerySmall",0,10);
			SVIS D 3 Bright A_SpawnItem("RedFlareVerySmall",0,10);
			Loop;
		Spawn2:
			SVIS E 4;
			SVIS DCBACD 2 BRIGHT;
			Goto Spawn;
			
		Pickup:
			TNT1 A 1;
			TNT1 A 0 A_GiveInventory("HasInfrared", 1);
			TNT1 A 0 A_GiveInventory("NightVisionGiver", 1);
			TNT1 A 0 A_GiveInventory("HasInfraRed", 1);
			TNT1 A 1;
			Stop;
			
	}
}


CLASS NightVisionGiver : PowerupGiver { 
	Default {
		
		+COUNTITEM;
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.MaxAmount 0;
		Powerup.Type "powerLightAmp";
		Inventory.PickupMessage "$GOTVISOR";
		//Powerup.Colormap 0.0, 0.0, 0.0, 1.0,0.5,0.5
		Powerup.Duration 4200;
	}
	States
	{
		Spawn:
			SVIS E 7;
			SVIS D 3 Bright A_SpawnItem("RedFlareVerySmall",0,10);
			SVIS C 2 Bright A_SpawnItem("RedFlareVerySmall",0,10);
			SVIS BAB 1 Bright A_SpawnItem("RedFlareVerySmall",0,10);
			SVIS C 2 Bright A_SpawnItem("RedFlareVerySmall",0,10);
			SVIS D 3 Bright A_SpawnItem("RedFlareVerySmall",0,10);
			Loop;
			
			
	}
}

CLASS HasInfrared : Inventory { 
	Default {
		
		inventory.maxamount 1;
	}
	private uint i;
	override void doeffect()
	{
		i++;
		if(i > 4200)
			self.destroy();
	}
}

// Berserk ------------------------------------------------------------------



CLASS Berserl1 : CustomInventory Replaces Berserk { 
	Default {
		
		Scale 1.2;
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "$GOTBERSERK";
		Inventory.PickupSound "misc/p_pkup";
		Inventory.PickupSound "BERSPKUP";
	}
	States
	{
		Spawn:
			TNT1 A 0 A_CheckSight("Spawn2");
			PSTR A 2 A_SpawnItem("RedFlareVerySmall",0,10);
			Loop;
		Spawn2:
			PSTR A 14;
			Goto Spawn;
		Pickup:
			TNT1 A 0 A_GiveInventory("PowerStrength");
			TNT1 A 0 HealThing(100, 0);
			TNT1 A 0 A_SelectWeapon("Melee_Attacks");
			TNT1 A 20;
			TNT1 A 0 A_Print ("Press Reload (R) to alternate execution modes");
			Stop;
	}
}

CLASS SuperBlurSphere : CustomInventory { //Replaces BlurSphere
	Default {
		
		+COUNTITEM;
		+VISIBILITYPULSE;
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;
		+INVENTORY.BIGPOWERUP;
		RenderStyle "Translucent";
		Inventory.PickupMessage "$GOTINVIS";// "Partial Invisibility"
	}
	States
	{
		Spawn:
			PINS AABBCCDDCCBB 2 Bright A_SpawnItem("RedFlare", 0, 24);
			Loop;
		Pickup:
			TNT1 A 1;
			TNT1 A 0 A_GiveInventory("IsInvisible", 1);
			TNT1 A 0 A_GiveInventory("Blursphere", 1);
			TNT1 A 1;
			Stop;
	}
}


CLASS DemonStrengthRune : Berserl1 { 
	Default {
		
		Scale 0.2;
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "You got the Demon Strength Rune. RIP AND TEAR!";
		Inventory.PickupSound "misc/p_pkup";
	}
	States
	{
		Spawn:
			DPRF AABBCCBB 2 A_SpawnItem("RedFlareSmall",0,20);
			Loop;
		Pickup:
			TNT1 A 0 A_GiveInventory("PowerStrength");
			TNT1 A 0 HealThing(10, 0);
			TNT1 A 20;
			TNT1 A 0 A_Print ("You got the Demon Strength Rune. RIP AND TEAR!");
			Stop;
	}
}






CLASS TimeFreezer2 : PowerupGiver { 
	Default {
		
		Inventory.Pickupmessage "Time Freezer!";
		Inventory.Icon "MEGAA0";
		Inventory.MaxAmount 0;
		Inventory.UseSound "pickups/slowmo";
		Powerup.Type "powerTimeFreezer";
		Powerup.Duration 50;
		Translation "128:143=48:63";
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.FANCYPICKUPSOUND;
	}
	States
	{
	Spawn:
		MEGA ABCD 4 bright;
		Loop;
}
}

CLASS PowerTimeFreezer2 : PowerTimeFreezer { 
	Default {
	
	Powerup.Duration 2;
	}
}
