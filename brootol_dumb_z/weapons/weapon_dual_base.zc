
class doomb_dual_weapon_base : doomb_weapon_base abstract
{
enum wepons
{
	LEFT_WEAPON = -2,
	RIGHT_WEAPON = 2
}


enum doomb_dual_fire_states
{
	DDF_NONE = 0,
	DDF_PRIMARY_FIRE = 1,
	DDF_ALT_FIRE = 1 << 1,
	DDF_PRIMARY_SHOULD_EXIST = 1 << 3,
	DDF_ALT_SHOULD_EXIST = 1 << 4
};
protected uint doomb_dual_weapon_state, doomb_left_weapon_state, doomb_right_weapon_state;

protected bool is_self_valid_weapon()
{
	if(owner && owner.player && !owner.bcorpse && owner.health > 0 && owner.player.readyweapon == self)
		return true;

	return false;
}


protected void doomb_dual_check_fire()
{
	if(owner.player && owner.player.cmd.buttons & BT_ATTACK && !(doomb_dual_weapon_state & DDF_PRIMARY_FIRE) && owner.player.findPSprite(LEFT_WEAPON) )
	{
		doomb_dual_weapon_state |= DDF_PRIMARY_FIRE;
	}

	if(owner.player && owner.player.cmd.buttons & BT_ALTATTACK && !(doomb_dual_weapon_state & DDF_ALT_FIRE) && owner.player.findPSprite(RIGHT_WEAPON))
	{
		doomb_dual_weapon_state |= DDF_ALT_FIRE;
	}

}

protected void init_dual_guns()
{
	if(is_self_valid_weapon() )
	{
		owner.player.GetPSprite(LEFT_WEAPON).setstate(doomb_dual_weapon_base(owner.player.readyweapon).doomb_dual_get_primary_ready() );
		owner.player.GetPSprite(RIGHT_WEAPON).setstate(doomb_dual_weapon_base(owner.player.readyweapon).doomb_dual_get_alt_ready() );

		owner.A_OverlayFlags(LEFT_WEAPON, PSPF_ADDBOB|PSPF_POWDOUBLE|PSPF_CVARFAST, true);
		owner.A_OverlayFlags(RIGHT_WEAPON, PSPF_ADDBOB|PSPF_POWDOUBLE|PSPF_CVARFAST, true);
		doomb_dual_weapon_state |= (DDF_ALT_SHOULD_EXIST|DDF_PRIMARY_SHOULD_EXIST);
	}
}

protected void doomb_destroy_dual_guns()
{
	if(is_self_valid_weapon() )
	{
		if( owner.player.FindPSprite(LEFT_WEAPON) )
			owner.player.FindPSprite(LEFT_WEAPON).destroy();
		
		if( owner.player.FindPSprite(RIGHT_WEAPON) )
			owner.player.FindPSprite(RIGHT_WEAPON).destroy();

		doomb_dual_weapon_state &= ~ (DDF_ALT_SHOULD_EXIST|DDF_PRIMARY_SHOULD_EXIST);
	}
}

override void doeffect()
{
	//super.doeffect();
	if(is_self_valid_weapon() )
	{
		doomb_dual_check_fire();
	}
}

protected virtual state doomb_dual_get_primary_ready()
{
	return resolvestate("right_gun_ready");
}
protected virtual state doomb_dual_get_alt_ready()
{
	return resolvestate("left_gun_ready");
}


protected virtual state doomb_dual_get_primary_fire()
{
	return resolvestate("Fire_left_Gun");
}
protected virtual state doomb_dual_get_alt_fire()
{
	return resolvestate("Fire_Right_Gun");
}


protected void doomb_dual_weapon_ready()
{

}


protected state doomb_dual_primary_ready()
{
	if(self.doomb_dual_weapon_state & DDF_PRIMARY_FIRE)
		return doomb_dual_get_primary_fire();

	else
		return resolvestate(null);
}

protected state doomb_dual_refire()
{
	//if(self.StateInfo.mStateType == STATE_Psprite && self.StateInfo.mPSPIndex == LEFT_WEAPON)
	{
		if(self.doomb_dual_weapon_state & DDF_PRIMARY_FIRE && owner.player.cmd.buttons & BT_ATTACK)
			return doomb_dual_get_primary_fire();

		else
		{
			self.doomb_dual_weapon_state &= ~DDF_PRIMARY_FIRE;
			return resolvestate(null);
		}
	}

	//if(StateInfo.mStateType == STATE_Psprite && StateInfo.mPSPIndex == RIGHT_WEAPON)
	{
		if(self.doomb_dual_weapon_state & DDF_ALT_FIRE && owner.player.cmd.buttons & BT_ALTATTACK)
			return doomb_dual_get_alt_fire();

		else
		{
			self.doomb_dual_weapon_state &= ~DDF_ALT_FIRE;
			return resolvestate(null);
		}
	}

}

protected state doomb_dual_primary_refire()
{
	if(self.doomb_dual_weapon_state & DDF_PRIMARY_FIRE && owner.player.cmd.buttons & BT_ATTACK)
		return doomb_dual_get_primary_fire();

	else
	{
		self.doomb_dual_weapon_state &= ~DDF_PRIMARY_FIRE;
		return resolvestate(null);
	}
}

protected state doomb_dual_alt_ready()
{
	if(self.doomb_dual_weapon_state & DDF_ALT_FIRE)
		return doomb_dual_get_alt_fire();

	else
		return resolvestate(null);
}

protected state doomb_dual_alt_refire()
{
	if(self.doomb_dual_weapon_state & DDF_ALT_FIRE && owner.player.cmd.buttons & BT_ALTATTACK)
		return doomb_dual_get_alt_fire();

	else
	{
		self.doomb_dual_weapon_state &= ~DDF_ALT_FIRE;
		return resolvestate(null);
	}
}

states
{
	wait_another_gun:
		tnt1 a 1;
	loop;
}

}


class wepon : weapon abstract
{

protected action void check_layer()
{
	if(stateinfo != null && StateInfo.mStateType == STATE_Psprite && StateInfo.mPSPIndex == 1)
		console.printf("first layer");
}

}