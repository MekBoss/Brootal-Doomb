CLASS Kicking : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS Punching : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS Berserker : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS KickAttackLow : ACTOR { 
Default {
	
	+NOGRAVITY;
}
}

CLASS NoFatality : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS KickHasHit : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}


CLASS ShotgunguyHead: Inventory { 
Default {
	
	inventory.maxamount 1;
}
}


CLASS HeavyStrikeRight : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS HeavyStrikeLeft : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

CLASS HeavyStrikeUpWard : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}




CLASS PSeq1 : Inventory { 
Default {
	
	inventory.maxamount 2;
}
}

CLASS PSeq2 : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}


CLASS PSeq3 : Inventory { 
Default {
	
	inventory.maxamount 1;
}
}

// --------------------------------------------------------------------------
//
// Melee Weapons
//
// --------------------------------------------------------------------------


CLASS Melee_Attacks : doomb_weapon_base Replaces Fist { 
Default {
	Weapon.SlotNumber 1;
	Weapon.SlotPriority 0;
	Weapon.SelectionOrder 3700;
	Weapon.Kickback 100;

	Obituary "%o was Ripped and Teared by %k";
	+WEAPON.WIMPY_WEAPON;
	+WEAPON.MELEEWEAPON;
	+WEAPON.NOALERT;
	+WEAPON.NOAUTOAIM;
	+WEAPON.CHEATNOTWEAPON;
}
States
{



	Select:
		TNT1 A 0 A_Raise;
	Wait;

	Ready:
		PUNS ABCDCBA 1;
		////////////////// Check if player is performing a fatality\\\\
	ready_loop:
		TNT1 A 0 A_jumpifinventory("LostSoulFatality",1,"ReadySoul");
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		////////////////////
		TNT1 AAA 0;
		TNT1 A 0 A_JumpIfInventory("ShotgunguyHead",1,"ReadyShotgunguyHead");
		TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul");
		TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"ReadyBarrel");
		PUNG A 2 A_WeaponReady;
		TNT1 A 0 A_GunFlash;
		TNT1 A 0 A_TakeInventory("PSeq1", 2);
		TNT1 A 0 A_TakeInventory("PSeq2", 2);
	loop;

	ReadySoul:
		TNT1 A 0 A_JumpIfInventory("Reloading",1,"KillLS");
		THEA ABCDCD 7 BRIGHT
		{
			A_WeaponReady();
			A_FireProjectile("LostSoulOnHandFireSpawner",40,0,0,5);
		}
	Goto ready_loop;

	ReadyBarrel:
		MARN A 0 ACS_ExecuteAlways(294, 0, 0, 0, 0);//Makes player slower.
		THRG A 2 A_WeaponReady;
	Goto ready_loop;
		
	ReadyShotgunguyHEad:
		PTG1 B 2 A_WeaponReady;
	Goto ready_loop;
		
		
	Deselect:
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower;
		TNT1 A 0 A_Takeinventory("FistsSelected",1);
		//TNT1 A 0 A_jumpifinventory("LostSoulFatality",1,"KillLS")
		TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"FireBarrel");
		TNT1 A 1;
	Wait;
















	Steady:
		TNT1 A 1;
		TNT1 A 0 ACS_Execute(477, 0, 0, 0, 0);
		Goto Ready;
		
	Reload:
		TNT1 A 0 A_jumpifinventory("PowerStrength",1,"SelectFatalityModes");
		PUNS BCD 1;
		PUNS E 7 A_PlaySound("Knuckled");
		PUNS FGFE 3;
		PUNS DCB 1 A_TakeInventory("Reloading", 1);
		Goto ready_loop;
		
	SelectFatalityModes:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("NoFatality", 1, "FatalityOn");
		Goto FatalityOff;
	FatalityOn:
		TNT1 A 0 A_Print("RIP AND TEAR! Mode");
		PUNS BCD 1;
		PUNS E 7 A_PlaySound("Knuckled");
		PUNS FGFE 3 A_TakeInventory("Reloading", 1);
		PUNS DCB 1 A_TakeInventory("NoFatality", 1);
		Goto ready_loop;
		
	FatalityOff:
		TNT1 A 0 A_Print("SMASH Mode");
		PUNS BCD 1;
		PUNS E 7 A_PlaySound("Knuckled");
		PUNS FGFE 3 A_TakeInventory("Reloading", 1);
		PUNS DCB 1 A_GiveInventory("NoFatality", 1);
		Goto ready_loop;
	DoingFatality:
		PUNG A 1;
		TNT1 A 0 ACS_Execute(477, 0, 0, 0, 0);
		Goto Ready+7;
		
		

		
	KillLS:
		THEA E 8;
		TNT1 A 0 A_FireProjectile("LSOHK",40,0,0,5);
		TNT1 A 0 A_Takeinventory("LostSoulFatality",1);
		THEA F 8;
		THEA F 1 A_Lower;
	Wait;
		
		////////////////////////////////////////////// Normal Attacks
		
	Fire:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("ShotgunguyHead",1,"ShotgunguyHeadFire");
		TNT1 A 0 A_jumpifinventory("LostSoulFatality",1,"LSFire");
		TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"FireBarrel");
		TNT1 A 0 A_jumpifinventory("PowerStrength",1,"FatalityFire");
		TNT1 A 0 A_Jump(128, "PunchRight");
		
	PunchLeft:
		PUNG BCD 1;
		TNT1 A 0 A_PlaySound("skeleton/swing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PUNG A 0 A_FireProjectile("MeleeStrikeNormal", 0, 0, 0, -9);
		
		PUNG E 2;
		TNT1 A 0 A_TakeInventory("Kicking", 1);
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		TNT1 A 0 A_GiveInventory("PSeq1", 1);
		PUNG DCB 2;
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight");
		TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul");
		PUNG AA 1 A_JumpIfInventory("Kicking",1,"KickRight");
		TNT1 A 0 A_Refire;
		Goto ready_loop;
		
	PunchRight:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"AltFireBarrel");
		
		PUP2 B 1;
		PUP2 C 1;
		PUN2 AC 1;
		TNT1 A 0 A_PlaySound("skeleton/swing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PUNG A 0 A_FireProjectile("MeleeStrikeNormal", 0, 0, 0, -9);
		//PUN2 A 0 A_Custompunch(25,1,1,"MeleePuff")
		PUN2 DE 2;
		TNT1 A 0 A_TakeInventory("Kicking", 1);
		TNT1 A 0 A_GiveInventory("PSeq2", 1);
		PUN2 FFGH 1;
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickLeft");
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul");
		PUNG AA 1 A_JumpIfInventory("Kicking",1,"KickLeft");
		TNT1 A 0 A_Refire;
		//TNT1 A 0 A_Refire
		Goto ready_loop;
		
		
	AltFire:
		TNT1 A 0;
		
		TNT1 A 0 A_jumpifinventory("PowerStrength",1,"SuperAltFire");
		TNT1 A 0 A_JumpIfInventory("PSeq1", 1, "AltFireQUick");
		TNT1 A 0 A_JumpIfInventory("PSeq2", 1, "AltFire2");
		TNT1 A 0 SetPlayerProperty(0,1,0);
		TNT1 A 8;
		TNT1 A 0 A_Recoil(-2);
		TNT1 A 0 A_Jump(256, "AltFireQuick", "AltFire2", "AltFire3");
		
	AltFireQuick:
		TNT1 A 4;
		TNT1 A 0 A_TakeInventory("PSeq1", 2);
		TNT1 A 0 A_TakeInventory("PSeq2", 2);
		PUN3 ABCDE 1;
		TNT1 A 0 A_PlaySound("weapons/gswing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PUN3 F 1;
		RIFF AA 0 A_FireProjectile("KickAttack", 0, 0, 0, -9);
		PUN3 GHI 1;
		TNT1 A 0 SetPlayerProperty(0,0,0);
		PUN3 JK 1 A_JumpIfInventory("Kicking",1,"KickRight");
		TNT1 AAA 1 A_JumpIfInventory("Kicking",1,"KickRight");
		PUN5 BA 1 A_WeaponReady(1);
		TNT1 A 0 A_REfire;
		Goto ready_loop;
		
	AltFire3:
		TNT1 A 4;
		TNT1 A 0 A_TakeInventory("PSeq1", 2);
		TNT1 A 0 A_TakeInventory("PSeq2", 2);
		PUN4 ABCDE 1;
		TNT1 A 0 A_PlaySound("weapons/gswing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PUN4 F 1;
		RIFF AA 0 A_FireProjectile("KickAttack", 0, 0, 0, -9);
		PUN4 GHI 1;
		TNT1 A 0 SetPlayerProperty(0,0,0);
		PUN4 JK 1 A_JumpIfInventory("Kicking",1,"KickRight");
		TNT1 AAA 1 A_JumpIfInventory("Kicking",1,"KickRight");
		PUN5 BA 1 A_WeaponReady(1);
		TNT1 A 0 A_REfire;
		Goto ready_loop;
		
	AltFire2:
		TNT1 A 4;
		
		TNT1 A 0 A_TakeInventory("PSeq1", 2);
		TNT1 A 0 A_TakeInventory("PSeq2", 2);
		PUN5 CDE 1;
		TNT1 A 0 A_PlaySound("weapons/gswing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PUN5 F 1;
		TNT1 A 0 A_GiveInventory("HeavyStrikeUpward", 1);
		RIFF AA 0 A_FireProjectile("KickAttack", 0, 0, 0, 0);
		PUN5 GHIJ 1;
		TNT1 A 0 A_TakeInventory("HeavyStrikeUpward", 1);
		TNT1 A 0 SetPlayerProperty(0,0,0);
		PUN5 KLM 1 A_JumpIfInventory("Kicking",1,"KickRight");
		TNT1 AAA 1 A_JumpIfInventory("Kicking",1,"KickRight");
		PUN5 BA 1 A_WeaponReady(1);
		TNT1 A 0 A_REfire;
		Goto ready_loop;
		
		
		/////////////////////////////////////////////// Fatalities
		
	FatalityFire:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("NoFatality", 1, "PunchBerserkNoFatality");
		TNT1 A 0 A_Jump(128, "PunchRightFatality");
		
	PunchLeftFatality:
		PUNG BCD 1;
		TNT1 A 0 A_PlaySound("weapons/gswing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PUNG A 0 A_FireProjectile("MeleeStrike1Fatality", 0, 0, 0, -9);
		
		PUNG E 4;
		TNT1 A 0 A_TakeInventory("Kicking", 1);
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		TNT1 A 0 A_GiveInventory("PSeq1", 1);
		PUNG DCB 1;
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight");
		TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul");
		PUNG AA 1 A_JumpIfInventory("Kicking",1,"KickRight");
		TNT1 A 0 A_Refire;
		Goto ready_loop;
		
	PunchRightFatality:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"AltFireBarrel");
		
		PUP2 B 1;
		PUP2 C 1;
		PUN2 AC 1;
		TNT1 A 0 A_PlaySound("weapons/gswing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PUNG A 0 A_FireProjectile("MeleeStrike1Fatality", 0, 0, 0, -9);
		//PUN2 A 0 A_Custompunch(25,1,1,"MeleePuff")
		PUN2 DD 2;
		TNT1 A 0 A_TakeInventory("Kicking", 1);
		TNT1 A 0 A_GiveInventory("PSeq2", 1);
		PUN2 EFGH 1;
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickLeft");
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul");
		PUNG AA 1 A_JumpIfInventory("Kicking",1,"KickLeft");
		TNT1 A 0 A_Refire;
		//TNT1 A 0 A_Refire
		Goto ready_loop;
		
		
	SuperAltFire:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("PSeq1", 1, "AltFireQUickFatality");
		TNT1 A 0 A_JumpIfInventory("PSeq2", 1, "AltFire2Fatality");
		TNT1 A 4;
		TNT1 A 0 A_Recoil(-2);
		TNT1 A 0 A_Jump(256, "AltFireQuickFatality", "AltFire2Fatality", "AltFire3Fatality");
		
	AltFireQuickFatality:
		TNT1 A 4;
		TNT1 A 0 A_TakeInventory("PSeq1", 2);
		TNT1 A 0 A_TakeInventory("PSeq2", 2);
		PUN3 ABCDE 1;
		TNT1 A 0 A_PlaySound("weapons/gswing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PUN3 F 1;
		
		TNT1 A 0 A_GiveInventory("HeavyStrikeLeft", 1);
		RIFF AAA 0 A_FireProjectile("SuperKickAttack", 0, 0, 0, -9);
		PUN3 GHI 1;
		TNT1 A 0 A_TakeInventory("HeavyStrikeLeft", 1);
		TNT1 A 0 SetPlayerProperty(0,0,0);
		PUN3 JK 1 A_JumpIfInventory("Kicking",1,"KickRight");
		TNT1 AAA 1 A_JumpIfInventory("Kicking",1,"KickRight");
		PUN5 BA 1 A_WeaponReady(1);
		TNT1 A 0 A_REfire;
		Goto ready_loop;
		
	AltFire2Fatality:
		TNT1 A 4;
		
		TNT1 A 0 A_TakeInventory("PSeq1", 2);
		TNT1 A 0 A_TakeInventory("PSeq2", 2);
		PUN5 CDE 1;
		TNT1 A 0 A_PlaySound("weapons/gswing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PUN5 F 1;
		
		TNT1 A 0 A_GiveInventory("HeavyStrikeUpward", 1);
		RIFF AAA 0 A_FireProjectile("SuperKickAttack", 0, 0, 0, 0);
		PUN5 GHIJ 1;
		TNT1 A 0 A_TakeInventory("HeavyStrikeUpward", 1);
		TNT1 A 0 SetPlayerProperty(0,0,0);
		PUN5 KLM 1 A_JumpIfInventory("Kicking",1,"KickRight");
		TNT1 AAA 1 A_JumpIfInventory("Kicking",1,"KickRight");
		PUN5 BA 1 A_WeaponReady(1);
		TNT1 A 0 A_REfire;
		Goto ready_loop;
		
	AltFire3Fatality:
		TNT1 A 4;
		TNT1 A 0 A_TakeInventory("PSeq1", 2);
		TNT1 A 0 A_TakeInventory("PSeq2", 2);
		PUN4 ABCDE 1;
		TNT1 A 0 A_PlaySound("weapons/gswing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PUN4 F 1;
		TNT1 A 0 A_GiveInventory("HeavyStrikerIGHT", 1);
		RIFF AAA 0 A_FireProjectile("SuperKickAttack", 0, 0, 0, -9);
		PUN4 GHI 1;
		TNT1 A 0 A_TakeInventory("HeavyStrikeRight", 1);
		TNT1 A 0 SetPlayerProperty(0,0,0);
		PUN4 JK 1 A_JumpIfInventory("Kicking",1,"KickRight");
		TNT1 AAA 1 A_JumpIfInventory("Kicking",1,"KickRight");
		PUN5 BA 1 A_WeaponReady(1);
		TNT1 A 0 A_REfire;
		Goto ready_loop;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		
	KickRight:
		KIK2 ABC 1;
		TNT1 A 0 A_PlaySound("KICK");
		TNT1 A 0 A_Giveinventory("Punching",1);
		TNT1 A 0 A_SetPitch(-6 + pitch);
		KIK2 D 1;
		PUN2 A 0 A_Custompunch(35,0,1,"MeleePuff");
		KIK2 DD 1;
		KIK2 ECBA 1;
		TNT1 A 5 A_TakeInventory("Kicking",1);
		Goto ready_loop;
		
		
	KickLeft:
		KIK1 ABC 1;
		TNT1 A 0 A_PlaySound("KICK");
		TNT1 A 0 A_Giveinventory("Punching",1);
		TNT1 A 0 A_SetPitch(-6 + pitch);
		KIK1 D 1;
		PUN2 A 0 A_Custompunch(35,0,1,"MeleePuff");
		KIK1 DD 1;
		KIK1 ECBA 1;
		TNT1 A 5 A_TakeInventory("Kicking",1);
		Goto ready_loop;
		
	LSFire:
		THEF A 4;
		TNT1 A 0 A_PlaySound("skeleton/swing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		THEF B 4 A_FireProjectile("PoorLostSoul", 0, 1, 0, 0);
		THEF CD 4;
		TNT1 A 0 A_TakeInventory("LostSoulFatality",1);
		Goto ready_loop;
		
		
	ShotgunguyHeadFire:
		PTG1 CDEFGHIJ 1;
		TNT1 A 0 A_PlaySound("skeleton/swing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PTG1 K 1 A_FireProjectile("SergeantHeadThrown", 0, 0, 0, 0);
		PTG1 LMNOP 1;
		TNT1 A 0 A_TakeInventory("ShotgunguyHead",1);
		Goto ready_loop;
		
	FireBarrel:
		THRF A 3 A_FireProjectile("ThrowedBarrel", 0, 1, 0, 0);
		TNT1 A 0 A_PlaySound("skeleton/swing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		
		MARN A 0 ACS_ExecuteAlways(295, 0, 0, 0, 0);//Makes player have normal speed.
		THRF ABCDEF 3;
		Goto ready_loop;
	AltFireBarrel:
		PUNG A 1;
		THRF A 0 A_SpawnItemEx ("ExplosiveBarrel",40,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		MARN A 0 ACS_ExecuteAlways(295, 0, 0, 0, 0);//Makes player have normal speed.
		TNT1 A 0 A_PlaySound("skeleton/swing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		
		PUNG A 5;
		Goto ready_loop;
		
		
	PunchBerserkNoFatality:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "PunchRightBerserkNoFatality");
		
	PunchLeftBerserkNoFatality:
		PUNG BCD 1;
		TNT1 A 0 A_PlaySound("weapons/gswing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PUNG A 0 A_FireProjectile("MeleeStrike1Berserked", 0, 0, 0, -9);
		
		PUNG E 4;
		TNT1 A 0 A_TakeInventory("Kicking", 1);
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		TNT1 A 0 A_GiveInventory("PSeq1", 1);
		PUNG DCB 1;
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight");
		TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul");
		PUNG AA 1 A_JumpIfInventory("Kicking",1,"KickRight");
		TNT1 A 0 A_Refire;
		Goto ready_loop;
		
	PunchRightBerserkNoFatality:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"AltFireBarrel");
		
		PUP2 B 1;
		PUP2 C 1;
		PUN2 AC 1;
		TNT1 A 0 A_PlaySound("weapons/gswing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PUNG A 0 A_FireProjectile("MeleeStrike1Berserked", 0, 0, 0, -9);
		//PUN2 A 0 A_Custompunch(25,1,1,"MeleePuff")
		PUN2 DD 2;
		TNT1 A 0 A_TakeInventory("Kicking", 1);
		TNT1 A 0 A_GiveInventory("PSeq2", 1);
		PUN2 EFGH 1;
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickLeft");
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul");
		PUNG AA 1 A_JumpIfInventory("Kicking",1,"KickLeft");
		TNT1 A 0 A_Refire;
		//TNT1 A 0 A_Refire
		Goto ready_loop;
		
	Flash:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("FlashlightAction", 1, "CheckFlashlight");
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("IsFlashlightOn", 1, "FlashOn");
		Goto Flash;
	FlashOn:
		TNT1 A 0 A_FireProjectile("FlashlightProjectile", 0, 0, 0, 0, 0, 0);
		TNT1 A 0 A_FireProjectile("FlashlightSource", 0, 0, 0, 0, 0, 0);
		Goto Flash;
	CheckFlashLight:
		TNT1 A 1;
		TNT1 A 0 A_TakeInventory("FlashlightAction");
		TNT1 A 0 A_JumpIfInventory("IsFlashlightOn", 1, "TurnOffFlashlight");
		TNT1 A 0 A_GiveInventory("IsFlashlightOn", 1);
		Goto Flash;
	TurnOffFlashlight:
		TNT1 A 0 A_TakeInventory("IsFlashlightOn", 1);
		Goto Flash;
}
}


CLASS PoorLostSoul : visual_sfx { 
Default {
	
	Radius 16;
	Height 8;
	Speed 22;
	Fastspeed 26;
	Damage 15;
	Projectile;
	Scale 1.0;
	+FORCEXYBILLBOARD;
	DamageType "Fire";
	Alpha 1;
	SeeSound "skull/melee";
	DeathSound "fatso/shotx";
}
States
{
	Spawn:
		TNT1 A 0 doomb_show_effect("FlameTrails", (0, 0, 25), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5) ) );
		LSOL B 2 BRIGHT A_SpawnItem("RedFlare",0,0);
		Loop;
	Death:
		
		LSOL F 2 BRIGHT;
		LSOL G 2 BRIGHT;
		TNT1 A 0 A_Explode(70, 50);
		EXPL AAAAAAAAAAAAAAAAAAAAAAAA 0 doomb_show_effect("FlameTrails", (0, 0, 25), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5) ) );
		TNT1 AAAAAAAAAAAAAAAAAAAA 0 doomb_show_effect("ExplosionParticle2", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ) );
		TNT1 AAA 0 A_SpawnProjectile ("LSpart1", 42, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("LSpart3", 42, 0, random (0, 360), 2, random (0, 160));
		TNT1 AAAA 0 A_SpawnProjectile ("LSpart2", 42, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0;
		LSOL HI 6;
		Stop;
		Stop;
}
}



CLASS ThrowedBarrel : doomb_boolet_base { 
Default {
	
	Radius 6;
	Height 8;
	Speed 32;
	Fastspeed 32;
	Damage 55;
	+MISSILE;
	Gravity 0.6;
	Scale 1.0;
	+FORCEXYBILLBOARD;
	DamageType "Explosive_Impact";
	Alpha 1;
	DeathSound "Explosion";
}
States
{
	Spawn:
		TBRA A 2;
		Loop;
		
	Death:
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_Explode(160,200);
		TNT1 AAAAAA 0 A_SpawnProjectile ("SmallExplosionSpawner", 20, 0, random (0, 360), 2, - random (0, 180));
		TNT1 AAAAAAA 0 doomb_show_effect("ExplosionFlames", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5) ) );
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 doomb_show_effect("ExplosionParticle2", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ) );
		EXPL A 0 Radius_Quake (2, 24, 0, 15, 0);
		BEXP B 0 BRIGHT A_Scream;
		
		//TNT1 AAAAAAA 0 A_SpawnProjectile ("BarrelParticle", 35, 0, random (0, 360), 2, random (0, 160))
		TNT1 A 0 A_PlaySound("FAREXPL", 3);
		tnt1 a 0
		{
			a_setscale(3.0);
			a_setrenderstyle(0.12, STYLE_add);
			
		}
		SHWK ACEGIKMOQ 1 A_FadeOut(0.01);
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 4 doomb_show_effect("ExplosionSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 1) ) );
	Stop;
}
}





CLASS KickAttack: doomb_boolet_base { 
Default {
	
	Radius 18;
	Height 6;
	DamageType "Kick";
	Projectile;
	+FORCEXYBILLBOARD;
	+NOEXTREMEDEATH;
	RenderStyle "Add";
	Alpha 0.6;
	Damagefunction (random(28,32));
	Speed 30;
	//HitObituary "$OB_IMPHIT"
	SeeSound "none";
	DeathSound "none";
	Decal "none";
}
States
{
	Spawn:
		TNT1 A 1 BRIGHT;
		TNT1 A 1;//A_PlaySound("weapons/gswing")
		Stop;
	Death:
	XDEath:
		TNT1 A 0;
		TNT1 A 0 A_CheckFloor("DeathOnGround");
		PUFF A 0 A_PlaySound("player/cyborg/fist", 3);
		TNT1 A 0 A_SpawnItemEx ("PLOFT2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		EXPL AAAAAA 0 doomb_show_effect("ExplosionSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.2,0), 0.15 );
		TNT1 A 0 A_GiveToTarget("KickHasHit", 1);
		TNT1 A 0 Radius_Quake (2, 6, 0, 5, 0);//(intensity, duration, damrad, tremrad, tid)
		
		TNT1 A 10;
		Stop;
		
	DeathOnGround:
		TNT1 A 0;
		PUFF A 0 A_PlaySound("player/cyborg/fist", 3);
		TNT1 A 0 A_SpawnItemEx ("PLOFT2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		EXPL AAAAAA 0 doomb_show_effect("ExplosionSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.2,0), 0.15 );
		TNT1 A 0 Radius_Quake (2, 6, 0, 5, 0);//(intensity, duration, damrad, tremrad, tid)
		TNT1 A 0 A_Explode(10, 40, 0);
		TNT1 A 10;
		Stop;
}
}



CLASS SuperKickAttack: KickAttack { 
Default {
	
	Damagefunction (random(54,60));
	-NOEXTREMEDEATH;
}
}





CLASS HookAttack: KickAttack { 
Default {
	
	Speed 30;
}
}

CLASS AirKickAttack: KickAttack { 
Default {
	
	Radius 20;
	Height 32;
	Damagefunction (random(54,62));
}
}


CLASS SuperAirKickAttack: KickAttack { 
Default {
	
	Radius 20;
	Height 32;
	-NOEXTREMEDEATH;
	Damagefunction (random(92,110));
}
States
{
	Death:
		PUFF A 0 A_PlaySound("player/cyborg/fist", 3);
		TNT1 A 0 A_SpawnItemEx ("PLOFT2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		EXPL AAAAAA 0 doomb_show_effect("ExplosionSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.2,0), 0.15 );
		TNT1 A 0 A_GiveToTarget("KickHasHit", 1);
		TNT1 A 0 Radius_Quake (4, 10, 0, 5, 0);//(intensity, duration, damrad, tremrad, tid)
		TNT1 A 10;
		Stop;
}
}



CLASS MeleeStrike1: doomb_boolet_base { 
Default {
	
	Radius 18;
	Height 6;
	Projectile;
	+FORCEXYBILLBOARD;
	+NOEXTREMEDEATH;
	RenderStyle "Add";
	Alpha 0.6;
	//HitObituary "$OB_IMPHIT"
	SeeSound "none";
	DeathSound "none";
	Decal "none";
	
	DamageType "punch";
	Damagefunction (random(10,15));
	Speed 30;
}
States
{
	Spawn:
		TNT1 A 1 BRIGHT;
		Stop;
	Death:
		TNT1 A 0;
		PUFF A 0 A_PlaySound("player/cyborg/fist");
		EXPL AAAAAA 0 doomb_show_effect("ExplosionSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.2,0), 0.15 );
		TNT1 A 10;
		Stop;
}
}


CLASS MeleeStrike2: MeleeStrike1 { 
Default {
	
	Damagefunction (random(24,32));
	Speed 40;
}
}


CLASS MeleeStrikeNormal: MeleeStrike1 { 
Default {
	
	Damagefunction (random(19,20));
	Speed 40;
}
}


CLASS MeleeStrike1Fatality: MeleeStrike1 { 
Default {
	
	Damagefunction (random(38,40));
	DamageType "Fatality";
}
}


CLASS MeleeStrike1FatalityGrab: MeleeStrike1 { 
Default {
	
	Damagefunction (random(42,45));
	DamageType "Fatality";
}
}

CLASS MeleeStrike1Berserked: MeleeStrike1 { 
Default {
	
	Damagefunction (random(38,40));
}
}




CLASS MeleeStrike1Smash: MeleeStrike1 { 
Default {
	
	Damagefunction (random(24,32));
}
}




CLASS PLOFT : ACTOR { 
Default {
	
	+NOTARGET;
	Radius 10;
	Height 10;
	+NOGRAVITY;
	+NOTELEPORT;
	+NODAMAGETHRUST;
	+THRUGHOST;
	+NORADIUSDMG;
	+NOEXTREMEDEATH;
	PROJECTILE;
	+DEHEXPLOSION;
	+ACTIVATEMCROSS;
}
States
{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_Explode(25,150, 0);
		Stop;
}
}

CLASS PLOFT2 : ACTOR { 
Default {
	
	+NOTARGET;
	Radius 10;
	Height 10;
	DamageType "Kick";
	+NOGRAVITY;
	+NOTELEPORT;
	+NODAMAGETHRUST;
	+THRUGHOST;
	+NORADIUSDMG;
	+NOEXTREMEDEATH;
	PROJECTILE;
	+DEHEXPLOSION;
	+ACTIVATEMCROSS;
}
States
{
	Spawn:
		TNT1 A 0;
		// TNT1 A 0 A_Explode(20,30, 0)
		Stop;
}
}


CLASS PLOFT3 : ACTOR { 
Default {
	
	+NOTARGET;
	Radius 10;
	Height 10;
	+NOGRAVITY;
	+NOTELEPORT;
	+NODAMAGETHRUST;
	+THRUGHOST;
	+NORADIUSDMG;
	+NOEXTREMEDEATH;
	PROJECTILE;
	+DEHEXPLOSION;
	+ACTIVATEMCROSS;
}
States
{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_Explode(20,30, 0);
		Stop;
}
}


CLASS PLOFT4 : ACTOR { 
Default {
	
	+NOTARGET;
	Radius 10;
	Height 10;
	+NOGRAVITY;
	+NOTELEPORT;
	+NODAMAGETHRUST;
	+THRUGHOST;
	+NORADIUSDMG;
	+NOEXTREMEDEATH;
	PROJECTILE;
	+DEHEXPLOSION;
	+ACTIVATEMCROSS;
	DamageType "Kick";
}
States
{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_Explode(20,30, 0);
		Stop;
}
}



CLASS PLOFT5 : ACTOR { 
Default {
	
	+NOTARGET;
	Radius 10;
	Height 10;
	+NOGRAVITY;
	+NOTELEPORT;
	+NODAMAGETHRUST;
	+THRUGHOST;
	+NORADIUSDMG;
	+NOEXTREMEDEATH;
	PROJECTILE;
	+DEHEXPLOSION;
	+ACTIVATEMCROSS;
	DamageType "Kick";
}
States
{
	Spawn:
		TNT1 A 2;
		TNT1 A 0 A_Explode(10,30, 0);
		Stop;
}
}
