CLASS DualRifles: doomb_dual_weapon_base { 
Default {
	
	Weapon.SlotNumber 2;
	Weapon.SlotPriority 0;
	
	Weapon.AmmoUse1 0;
	Weapon.SelectionOrder 5100;
	Weapon.AmmoGive1 0;//How much ammo can be gathered with this weapon
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType1 "doomb_clip";//Reserve ammo type
	Weapon.AmmoType2 "DoubleRifleAmmo";//Magazine ammo type
	Obituary "%o was drilled by %k's Double Rifles.";//Kill message
	AttackSound "None";//You better leave this clear
	Inventory.Pickupmessage "";//Pickup message
	+WEAPON.NOAUTOAIM;//Makes this weapon never autoaim, so recoil can work better
	Scale 0.6;//Weapon's pickup sprite size
	+WEAPON.NOAUTOFIRE;
	+WEAPON.NO_AUTO_SWITCH;
}
States
{
	Spawn:
		TNT1 A 100;//Pickup sprite
	Loop;

	Select:
		TNT1 A 0 A_Raise;//Makes the weapon always be selected fast
	Wait;
		
	Ready:
		TNT1 A 0 A_PlaySound("CLIPIN", 1);
		P2SS AB 1;
		TNT1 A 0 A_PlaySound("CLIPIN", 3);
		P2SS CDEF 1;
		TNT1 A 0 {invoker.init_dual_guns();}
	ready_loop:
		tnt1 A 1 a_weaponready(WRF_ALLOWRELOAD|WRF_NOFIRE);
	loop;
	
	fire:
		tnt1 a 1;
		tnt1 a 1
		{
			if( (invoker.doomb_dual_weapon_state & DDF_PRIMARY_FIRE) || (invoker.doomb_dual_weapon_state & DDF_ALT_FIRE) )
			{
				if(self && self.player && self.player.readyweapon)
					return resolvestate("fire");
			}

			return resolvestate(null);
		}
	goto ready_loop;





	left_gun_ready:
		P2W2 A 1
		{
			return invoker.doomb_dual_primary_ready();
		}
	Loop;
		
		
	Fire_left_Gun:
		P2W2 A 1
		{
			A_AlertMonsters();
			a_fireprojectile("Tracer", random(-4,4), 0, -6, -2, 0, random(-2,2));
			{invoker.doomb_show_effect("GunFireSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ) );}
			A_PlaySound("weapons/rifle", 1);//Play gun fire sound
		}
		P2W2 B 1 BRIGHT A_FireBullets(12,3,-1,10,"MachineGunBulletPuff",1);//Horizontal Spread, Vertical Spread, Numbers of Projectiles (Leave as -1 if its a single one), Damage Factor
		P2W2 C 1 a_fireprojectile("RifleCaseSpawn",0,0,-20,-10);//Ejetts empty brass
		P2W2 D 2;
		TNT1 A 0
		{
			return invoker.doomb_dual_primary_refire();
		}
	Goto left_gun_ready;//No need to reload. Get back to Ready state.
	
	DryFire:
		P2W2 A 0 A_PlaySound("DRYFIRE", 1);
		P2W2 A 10;
	Goto left_gun_ready;





	right_gun_ready:
		P2W1 A 1 { return invoker.doomb_dual_alt_ready(); }
	Loop;
		
	Fire_Right_Gun:
		P2W1 A 1
		{
			A_AlertMonsters();
			a_fireprojectile("Tracer", random(-4,4), 0, 6, -2, 0, random(-2,2));
			{invoker.doomb_show_effect("GunFireSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ) );}
			A_PlaySound("weapons/rifle", 1);//Play gun fire sound
		}
		P2W1 B 1 BRIGHT A_FireBullets(12,3,-1,10,"MachineGunBulletPuff",1);//Horizontal Spread, Vertical Spread, Numbers of Projectiles (Leave as -1 if its a single one), Damage Factor
		P2W1 C 1 a_fireprojectile("RifleCaseSpawn",0,0,20,-10);//Ejetts empty brass
		P2W1 D 2 ;
		TNT1 A 0
		{
			return invoker.doomb_dual_alt_refire();
		}
	Goto right_gun_ready;
		
	DryFIre2:
		P2W1 A 1 A_PlaySound("DRYFIRE", 1);
		P2W1 AAAAAAAAAA 1 ;
	Goto right_gun_ready;
		
		
		
		
		
		
		
		
		
	Reload:
		tnt1 a 0
		{
			if(countinv("DoubleRifleAmmo") >= 60 || countinv("doomb_clip") < 1)
			{
				self.player.GetPSprite(PSP_WEAPON).SetState(player.ReadyWeapon.findstate("ready_loop") );
				return;
			}

			else
			{
				self.player.GetPSprite(LEFT_WEAPON).SetState(player.ReadyWeapon.findstate("wait_another_gun") );
				self.player.GetPSprite(RIGHT_WEAPON).SetState(player.ReadyWeapon.findstate("wait_another_gun") );
			}
		}
		P2SS FEDCBA 1;
		tnt1 a 0
		{
			A_PlaySound("DRYFIRE", 1);

			if(countinv("LeftRifleAmmo") <= 30)
			{
				self.player.GetPSprite(LEFT_WEAPON).SetState(player.ReadyWeapon.findstate("left_gun_reloading") );
				self.player.GetPSprite(RIGHT_WEAPON).SetState(player.ReadyWeapon.findstate("wait_another_gun") );
				return;
			}

			if(countinv("rightRifleAmmo") <= 30)
			{
				self.player.GetPSprite(LEFT_WEAPON).SetState(player.ReadyWeapon.findstate("wait_another_gun") );
				self.player.GetPSprite(RIGHT_WEAPON).SetState(player.ReadyWeapon.findstate("right_gun_reloading") );
				return;
			}
		}
	goto ready_loop;


	left_gun_reloading://Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0 A_PlaySound("RELOAD", 1);//reload sound
		R2RR ABCDDDDDDEFGHIIJJKLMNO 1;
		TNT1 A 5
		{
			a_fireprojectile("EmptyClipSpawn",185,0,8,-4);
			invoker.reload_weapon_magazine("LeftRifleAmmo", "doomb_clip");
			inventory am = findinventory("DoubleRifleAmmo");
			am.amount += 30;
			if(am.amount > 60)
				am.amount = 60;
			if(countinv("RightRifleAmmo") < 30)
			{
				self.player.GetPSprite(LEFT_WEAPON).SetState(player.ReadyWeapon.findstate("wait_another_gun") );
				self.player.GetPSprite(RIGHT_WEAPON).SetState(player.ReadyWeapon.findstate("right_gun_reloading") );
				return;
			}
			self.player.GetPSprite(LEFT_WEAPON).SetState(player.ReadyWeapon.findstate("wait_another_gun") );
		}
	goto finish_reloading;


	right_gun_reloading://Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0 A_PlaySound("RELOAD", 1);//reload sound
		R2RL ABCDDDDDDEFGHIIJJKLMNO 1;
		TNT1 A 5
		{
			a_fireprojectile("EmptyClipSpawn",-5,0,8,-4);
			invoker.reload_weapon_magazine("RightRifleAmmo", "doomb_clip");
			inventory am = findinventory("DoubleRifleAmmo");
			am.amount += 30;
			if(am.amount > 60)
				am.amount = 60;
			self.player.GetPSprite(LEFT_WEAPON).SetState(player.ReadyWeapon.findstate("wait_another_gun") );
		}
	Goto finish_reloading;


	finish_reloading:
		P2SS ABCDEF 1;
		TNT1 A 0
		{
			self.player.GetPSprite(LEFT_WEAPON).SetState(player.ReadyWeapon.findstate("left_gun_ready") );
			self.player.GetPSprite(RIGHT_WEAPON).SetState(player.ReadyWeapon.findstate("right_gun_ready") );
		}
	stop;




	Deselect:
		tnt1 a 0 {invoker.doomb_destroy_dual_guns();}
		P2SS FEDCBA 1;
		TNT1 A 0 A_Lower;//Makes player switch weapons faster
	Wait;
}
}

CLASS DoubleRifleAmmo : Ammo { //Your weapon's magazine ammo.
Default {
	
	Inventory.Amount 0;
	Inventory.MaxAmount 62;//Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 62;
	Inventory.Icon "RIFLA0";
}
}


CLASS LeftRifleAmmo : Ammo { //Your weapon's magazine ammo.
Default {
	
	Inventory.Amount 0;
	Inventory.MaxAmount 31;//Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 31;
	Inventory.Icon "SMGPA0";
}
}

CLASS RightRifleAmmo : Ammo { //Your weapon's magazine ammo.
Default {
	
	Inventory.Amount 0;
	Inventory.MaxAmount 31;//Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 31;
	Inventory.Icon "SMGPA0";
}
}
