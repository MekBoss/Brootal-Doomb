CLASS DualPlasmaRifles: doomb_dual_weapon_base
{ 
Default {
	Weapon.SlotNumber 6;
	Weapon.SlotPriority 0;
	
	Weapon.AmmoUse1 0;
	Weapon.SelectionOrder 100;
	Weapon.AmmoGive1 0;//How much ammo can be gathered with this weapon
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType1 "Cell";//Reserve ammo type
	Weapon.AmmoType2 "DoublePlasmagunAmmo";//Magazine ammo type
	Obituary "%o was drilled by %k's Double Plasmaguns.";//Kill message
	AttackSound "None";//You better leave this clear
	Inventory.Pickupmessage "";//Pickup message
	+WEAPON.NOAUTOAIM;//Makes this weapon never autoaim, so recoil can work better
	Scale 0.6;//Weapon's pickup sprite size
	+INVENTORY.UNDROPPABLE;
	+WEAPON.NOAUTOFIRE;
	+WEAPON.NO_AUTO_SWITCH;
}

override state doomb_dual_get_primary_ready()
{
	return self.findstate("right_gun");
}
override state doomb_dual_get_alt_ready()
{
	return self.findstate("left_gun");
}

override state doomb_dual_get_primary_fire()
{
	return self.findstate("Fire_left_Gun");
}
override state doomb_dual_get_alt_fire()
{
	return self.findstate("Fire_Right_Gun");
}

override state doomb_dual_get_primary_reload()
{
	return self.findstate("Fire_Right_Gun");
}
override state doomb_dual_get_alt_reload()
{
	return self.findstate("Fire_Right_Gun");
}


States
{
	
	Spawn:
		PLAS A 20;
		TNT1 A 0 A_SpawnItem("DropedPlasmaGun");
	Stop;

	Select:
		TNT1 A 0 A_Raise;//Makes the weapon always be selected fast
	Wait;

	Ready:
		TNT1 A 0 A_PlaySound("PLSDRAW", 1);
		PLRS AB 1;
		TNT1 A 0 A_PlaySound("PLSDRAW", 3);
		PLRS CDEF 1;
		TNT1 A 0 {invoker.init_dual_guns();}
	ready_loop:
		tnt1 A 1 a_weaponready(WRF_ALLOWRELOAD|WRF_NOFIRE);
	loop;
	
	fire:
		tnt1 a 1;
		tnt1 a 1
		{
			if( (invoker.doomb_dual_weapon_state &= DDF_PRIMARY) || (invoker.doomb_dual_weapon_state &= DDF_ALT) )
			{
				if(self && self.player && self.player.readyweapon)
					self.player.GetPSprite(RIGHT_WEAPON).setstate(self.player.readyweapon.findstate("fire") );
			}
		}
	goto ready_loop;





	left_gun:
		DPR2 A 1;
	Loop;

	Fire_left_Gun:
		DPR2 A 1
		{
			invoker.doomb_dual_weapon_state |= DDF_PRIMARY;
			A_AlertMonsters();
			console.printf("left 1");
		}		
		DPR2 B 1 BRIGHT
		{
			console.printf("left 2");
			a_fireprojectile("Plasma_Ball", random(-10,4), 0, -6, -4, 0, random(-2,2));//Horizontal Spread, Vertical Spread, Numbers of Projectiles (Leave as -1 if its a single one), Damage Factor
			Radius_Quake (1, 4, 0, 1, 0);
			A_PlaySound("PLSM9", 1);//Play gun fire sound
		}
		DPR2 C 1 BRIGHT
		{
			A_TakeInventory("DoublePlasmagunAmmo", 1);//Removes 1 ammo from magazine
			A_TakeInventory("LeftPlasmagunAmmo", 1);//Remove the fake ammo
			console.printf("left 3");
		}
		DPR2 D 1
		{
			console.printf("left 4");
		}
		DPR2 A 1
		{
			console.printf("left 5");
		}
		TNT1 A 0
		{
			console.printf("left 6");
			invoker.doomb_dual_weapon_state &= ~DDF_PRIMARY;
		}
	Goto left_gun;//No need to reload. Get back to Ready state.

	DryFire:
		DPR2 A 1 A_PlaySound("DRYFIRE", 1);
		DPR2 A 10;
	Goto left_gun;



		
	right_gun:
		DPR1 A 1;
	Loop;
		
	Fire_Right_Gun:
		DPR1 A 1
		{
			invoker.doomb_dual_weapon_state |= DDF_ALT;
			A_AlertMonsters();
		}
		DPR1 B 1 BRIGHT
		{
			a_fireprojectile("Plasma_Ball", random(-4,10), 0, 6, -4, 0, random(-2,2));//Horizontal Spread, Vertical Spread, Numbers of Projectiles (Leave as -1 if its a single one), Damage Factor
			A_PlaySound("PLSM9", 3);//Play gun fire sound
			Radius_Quake (1, 4, 0, 1, 0);
		}
		DPR1 C 1 BRIGHT
		{
			A_TakeInventory("DoublePlasmagunAmmo", 1);//Removes 1 ammo from magazine
			A_TakeInventory("RightPlasmagunAmmo", 1);//Remove the fake ammo
		}
		DPR1 D 1;//Remove the fake ammo
		TNT1 A 0
		{
			invoker.doomb_dual_weapon_state &= ~DDF_ALT;
		}
	Goto right_gun;

		
		

	DryFIre2:
		PLRS G 1 A_PlaySound("DRYFIRE", 1);
		PLRS GGGGG 1 A_JumpIfInventory("StopDualWield", 1, "LightDone");
	Goto right_gun;
		
		
		
		
	wait_another_gun:
		tnt1 a 1;
	loop;	
		
		
		
	Reload:
		tnt1 a 0
		{
			if(countinv("DoublePlasmagunAmmo") >= 100 || countinv("cell") < 1)
			{
				self.player.GetPSprite(PSP_WEAPON).SetState(player.ReadyWeapon.findstate("ready_loop") );
				return;
			}

			else
			{
				self.player.GetPSprite(LEFT_WEAPON).SetState(player.ReadyWeapon.findstate("wait_another_gun") );
				self.player.GetPSprite(RIGHT_WEAPON).SetState(player.ReadyWeapon.findstate("wait_another_gun") );
			}
		}
		PLRS FEDCBA 1;
		tnt1 a 0//Always leave one free line before the reload animation to prevent bugs
		{
			A_PlaySound("DRYFIRE", 1);

			if(countinv("leftPlasmagunAmmo") < 50)
			{
				self.player.GetPSprite(LEFT_WEAPON).SetState(player.ReadyWeapon.findstate("left_gun_reloading") );
				self.player.GetPSprite(RIGHT_WEAPON).SetState(player.ReadyWeapon.findstate("wait_another_gun") );
				return;
			}

			if(countinv("rightPlasmagunAmmo") < 50)
			{
				self.player.GetPSprite(LEFT_WEAPON).SetState(player.ReadyWeapon.findstate("wait_another_gun") );
				self.player.GetPSprite(RIGHT_WEAPON).SetState(player.ReadyWeapon.findstate("right_gun_reloading") );
				return;
			}
		}
	goto ready_loop;

	left_gun_reloading://Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0
		{
			invoker.reload_weapon_magazine("LeftPlasmagunAmmo", "cell");
			inventory am = findinventory("DoublePlasmagunAmmo");
			am.amount += 50;
			if(am.amount > 100)
				am.amount = 100;
		}
		TNT1 A 5;
		P2SR B 1;
		TNT1 A 0 A_PlaySound("PLREADY", 3);
		TNT1 A 0 a_fireprojectile("PlasmaCaseSpawn",-90);
		P2SR CDEEEEEEEEEEEEEEEF 1;
		P2SR GHHIIIJJJJJJJJIKLB 1;
		TNT1 A 5
		{
			if(countinv("RightPlasmagunAmmo") < 50)
			{
				self.player.GetPSprite(LEFT_WEAPON).SetState(player.ReadyWeapon.findstate("wait_another_gun") );
				self.player.GetPSprite(RIGHT_WEAPON).SetState(player.ReadyWeapon.findstate("right_gun_reloading") );
				return;
			}
		}
	Goto finish_reloading;



	right_gun_reloading://Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0
		{
			invoker.reload_weapon_magazine("RightPlasmagunAmmo", "cell");
			inventory am = findinventory("DoublePlasmagunAmmo");
			am.amount += 50;
			if(am.amount > 100)
				am.amount = 100;
		}
		TNT1 A 5;
		PLSR B 1;
		TNT1 A 0 A_PlaySound("PLREADY", 3);
		TNT1 A 0 a_fireprojectile("PlasmaCaseSpawn", 90);
		PLSR CDEEEEEEEEEEEEEEEF 1;
		PLSR GHHIIIJJJJJJJJIKLB 1;
		TNT1 A 5;
		TNT1 A 0
		{
			self.player.GetPSprite(LEFT_WEAPON).SetState(player.ReadyWeapon.findstate("wait_another_gun") );
		}
	Goto finish_reloading;

	finish_reloading:
		PLRS ABCDEF 1;
		TNT1 A 0
		{
			self.player.GetPSprite(LEFT_WEAPON).SetState(player.ReadyWeapon.findstate("left_gun") );
			self.player.GetPSprite(RIGHT_WEAPON).SetState(player.ReadyWeapon.findstate("right_gun") );
		}
	goto ready;



	dual_gun_reloading://Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("LeftPlasmagunAmmo", 50, "FinishReloadRightOnly");
		TNT1 A 0 A_JumpIfInventory("", 50, "right_gun_reloading");
		TNT1 A 0 A_GiveInventory("LeftPlasmagunAmmo", 50);
		TNT1 A 0 A_GiveInventory("RightPlasmagunAmmo", 50);
		PLRS FEDCBA 1;
		TNT1 A 5;
		PLSR B 1;
		TNT1 A 0 A_PlaySound("PLREADY", 1);
		TNT1 A 0 a_fireprojectile("PlasmaCaseSpawn",-210,0,20,-20);
		PLSR CDEEEEEEEEEEEEEEEF 1;
		PLSR GHHIIIJJJJJJJJIKLB 1;
		TNT1 A 10;
		P2SR B 1;
		TNT1 A 0 A_PlaySound("PLREADY", 3);
		TNT1 A 0 a_fireprojectile("PlasmaCaseSpawn",-210,0,20,-20);
		P2SR CDEEEEEEEEEEEEEEEF 1;
		P2SR GHHIIIJJJJJJJJIKLB 1;
		TNT1 A 0 A_TakeInventory("StopDualWield", 1);
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1);
		TNT1 A 5;
		PLRS ABCDEF 1;
	Goto ready_loop;
		
		
		
	Deselect:
		TNT1 A 1 A_Lower;//Makes player switch weapons faster
	Wait;

		

}
}

CLASS DoublePlasmagunAmmo : Ammo { //Your weapon's magazine ammo.
Default {
	
	Inventory.Amount 0;
	Inventory.MaxAmount 100;//Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 100;
	Inventory.Icon "PLASA0";
}
}


CLASS LeftPlasmagunAmmo : Ammo { //Your weapon's magazine ammo.
Default {
	
	Inventory.Amount 0;
	Inventory.MaxAmount 50;//Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 50;
	Inventory.Icon "SMGPA0";
}
}


CLASS RightPlasmagunAmmo : Ammo { //Your weapon's magazine ammo.
Default {
	
	Inventory.Amount 0;
	Inventory.MaxAmount 50;//Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 50;
	Inventory.Icon "SMGPA0";
}
}
