class doomb_blood_god :eventhandler
{

override void worldthingspawned(worldevent e)
{	
	if(e.thing is "doomb_monster_base")
	    doomb_monster_base(e.thing).set_blood_throne(self);
	if(e.thing is "doomber")
	    doomber(e.thing).set_blood_throne(self);
    
	if(e.thing is "doomb_blood")
	    doomb_blood(e.thing).set_blood_throne(self);
		
}
/* */
override void worldtick()
{
    if(doomb_blood_debug && (level.time % 90) == 0)
        console.printf("blood array size %i", blood_stains.size() );
}


private array<doomb_blood> blood_stains;

private doomb_blood doomb_find_fresh_blood(class<actor> type = null)
{
    if(type && type is "doomb_blood")
    {
        for(uint i = 0; i <= blood_stains.size(); i++)
        {
            if(i == blood_stains.size() )
            {
                doomb_blood b = doomb_blood(actor.spawn(type, (double.infinity, double.infinity, double.infinity)));
                b.set_init(true);
                blood_stains.push(b);
                return b;
            }

            if(blood_stains[i] && blood_stains[i].getclass() == type && doomb_blood(blood_stains[i]).is_active() == false)
            {
                return doomb_blood(blood_stains[i]);
            }

            else if (!blood_stains[i])
            {
                blood_stains.delete(i);
                i--;
            }
        }

    }

    return null;
}

doomb_blood doomb_blood_bank(class<actor> type = null)
{
    return doomb_find_fresh_blood(type);
}

}