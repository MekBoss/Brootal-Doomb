class doomb_blood : actor abstract
{

private state in_beaker_state;

override void postbeginplay()
{
	in_beaker_state = findstate("wait_in_beaker");
	super.postbeginplay();
}

Default
{
	+MISSILE;
	-ALLOWPARTICLES;
	-nogravity
	+CLIENTSIDEONLY;
	+NOTELEPORT;
	+THRUACTORS;
	+BLOODLESSIMPACT;
	+FORCEXYBILLBOARD;
	+NODAMAGETHRUST;
	+MOVEWITHSECTOR;
	+CORPSE;
	-DONTSPLASH;
	Decal "BrutalBloodSplat";
	damage 0;
}

protected void doomb_spawn_big_blood(int spawn_height = 0)
{
	if(waterlevel < 1)
    {
		for(uint i = 0; i < 2 * bd_bloodamount; i++)
		{
			actor a = doomb_for_khorne("Brutal_FlyingBloodTrail", (0, 0, random(20, 30) ), (frandom(-5, 5), frandom(-5, 5), frandom(0, 5) ) );
			a.setorigin(self.pos + (0, 0, spawn_height), false);

			if( (i % 2) == 0)
			{
				a = doomb_for_khorne("Brutal_FlyingBloodTrail", (0, 0, random(20, 30) ), (frandom(-5, 5), frandom(-5, 5), frandom(0, 5) ) );
				a.setorigin(self.pos + (0, 0, spawn_height), false);
			}
		}
	}
}

protected void doomb_spawn_bloodpool()
{
	if(GetFloorTerrain().isLiquid == false)
	{
		bool inside_another_pool = false;

		for (Actor check = cursector.thinglist; check != null; check = check.snext)
		{
			if (check is "doomb_blood_pool")
			{
				if(check.pos.x - check.radius < self.pos.x && check.pos.x + check.radius > self.pos.x)
				{
					if(check.pos.y - check.radius < self.pos.y && check.pos.y + check.radius > self.pos.y)
					{
						inside_another_pool = true;
					}
				}
			}
		}

		if(inside_another_pool)
			return;
	
		actor a = spawn("doomb_red_blood_pool", pos:self.pos);

		if(a)
		{
			if(self.getclassname() == "doomb_caco")
			{
				a.A_SetTranslation("red_to_blue");
				doomb_red_blood_pool(a).color = "blue";
			}

			if(self.getclassname() == "doomb_baron" || self.getclassname() == "doomb_knight")
			{
				a.A_SetTranslation("red_to_green");
				doomb_red_blood_pool(a).color = "green";
			}
		}
	}
}

protected bool active;
bool is_active() const
{
	return active;
}

protected eventhandler blood_throne;

void set_blood_throne(eventhandler e)
{
    if(e.getclassname() == "doomb_blood_god")
        blood_throne = e;
}

protected doomb_blood doomb_for_khorne(class<actor> it = null, vector3 off = (0, 0, 0), vector3 vel_dir = (0, 0, 0) )
{
	if(blood_throne && it)
	{
		if(it is "doomb_blood")
		{
			doomb_blood b = doomb_blood_god(blood_throne).doomb_blood_bank(it);
			if(b)
			{
				b.setorigin(pos + off, false);
				b.vel = vel_dir;
				b.setstate(b.findstate("spawn"));
				return b;
			}
		}
	}

	return null;
}

override void tick()
{
	super.tick();

	if(instatesequence(curstate, in_beaker_state ) )
		self.active = false;
	else
		active = true;
}

states
{
	wait_in_beaker:
		tnt1 a 2
		{
			vel = (0, 0, 0);
			active = false;
			bcorpse = false;
			for(uint i = 0; i < 10; i++)
				a_stopsound(i);

			setorigin((double.infinity, double.infinity, double.infinity), false);
		}
		tnt1 a -1;
	stop;
}

}