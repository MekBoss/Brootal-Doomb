//SLOWDOWN ADRESSED
//doomb_for_khorne("TinyBlood", (0, 0, random(20, 30) ), (frandom(-5, 5), frandom(-5, 5), frandom(0, 5) ) );
CLASS TinyBlood : doomb_blood
{ 
	Default {
		scale 0.2;
		speed 7;
		health 1;
		radius 8;
		height 1;
		Gravity 0.7;
		XScale 0.4;
		YScale 0.8;
		+DontSplash;
		+MISSILE;
		+CLIENTSIDEONLY;
		+NOTELEPORT;
		+NOBLOCKMAP;
		+FORCEXYBILLBOARD;
		-EXPLODEONWATER;
		+DOOMBOUNCE;
	}
	States
	{
		Spawn:
			tnt1 a 0 nodelay
			{
				a_setscale(frandom(0.8, 1.2) ); active = true;
				activate_blood();
			}
		mini:
			TNT1 A 0 A_JumpIf(waterlevel > 1, "Splash");
			BLUD Z 1
			{
				if(pos.z <= floorz)
					setstatelabel("death");
				
				vel.z -= 2;
			}
		loop;

		Splash:
			TNT1 A 0 A_SpawnProjectile ("Underblood1", 7, 0, random (0, 360), 2, - random (30, 150));
		goto wait_in_beaker;

		Death:
			tnt1 a 0 {vel = (0, 0, 0);}
			TNT1 A 0 A_PlaySound("blooddrop3");
			XDT1 EFGHIJKL 2;
			TNT1 A 0 doomb_spawn_bloodpool();
		goto wait_in_beaker;
	}
}

// Blood trails spawned by FlyingBlood
//SLOWDOWN ADRESSED
//doomb_for_khorne("doomb_red_blood_trail", (0, 0, random(20, 30) ), (frandom(-5, 5), frandom(-5, 5), frandom(0, 5) ) );
CLASS doomb_red_blood_trail : doomb_blood { 
	Default
	{
		scale 0.70;
		mass 1;
		renderstyle "Translucent";
		alpha 0.7;
		Speed 2;
	}
	states
	{
		Spawn:
			TNT1 A 0 nodelay 
			{
				If(waterlevel > 1)
					destroy();

			 	gravity = frandom(0.5, 0.9);
				a_setscale( frandom(0.7, 1.1) );
				vel *= frandom(1, 2);
				A_SetTranslucent(frandom(0.5, 0.7) );
				activate_blood();
			}
			BLOD ABCDE 1
			{
				if(waterlevel > 1)
					destroy();
			}
		Death:
			tnt1 a 0
			{
				if(!get_init_state() )
					destroy();
			}
		goto wait_in_beaker;
	}
}

//SLOWDOWN ADRESSED
//doomb_for_khorne("Intestine", (0, 0, 0), (frandom(-10, 10), frandom(-10, 10), frandom(0, 10) ) );
CLASS Intestine : doomb_blood
{ 
	Default {
		Radius 8;
		Height 12;
		Speed 6;
		Mass 1;
		Renderstyle "Translucent";
		Alpha 0.9;
		Decal "BrutalBloodSplat";
		Scale 1.1;
		+missile;
		+rollsprite
		+ROLLCENTER;
	}
	States
	{
		Spawn:
			tnt1 a 0 nodelay
			{
				a_setrenderstyle(1, STYLE_Translucent);
				bmissile = true;
				activate_blood();
			}
		spawn_loop:
			GUTS A 1
			{
				vel.z -= 0.3;
				roll += 20;
			}
		Loop;
		
		Death:
			GUTS E 600
			{
				roll = 0;
				angle = random(0, 180);
				frame = random(4, 5);
				bshootable = true;
				a_playsound("misc/xdeath1", 1, 1);
			}
		goto wait_in_beaker;
	}
}

CLASS doomb_sticky_meat: doomb_blood
{ 
	Default
	{
		+MOVEWITHSECTOR;
		+noclip
		-DOOMBOUNCE;
		+NOGRAVITY;
		-missile;
		+DontSplash;
		Renderstyle "Normal";
		Scale 1.1;
		speed 0;
	}
	states
	{
		XME1 a 0;
		XME2 a 0;
		XME3 a 0;

		Spawn:
			tnt1 a 0 nodelay
			{
				if(pos.z + height < ceilingz)
					destroy();

				uint i = random(0, 2);
				switch(i)
				{
					case 0: sprite = getspriteindex("XME1"); break;
					case 1: sprite = getspriteindex("XME2"); break;
					case 2: sprite = getspriteindex("XME3"); break;
					default: destroy(); break;
				}
				
			}
		spawn_loop:
			"####" F 5 a_jump(5, "fall_down");
		loop;
		
		fall_down:
			"####" H 1 {vel.z -= 0.5;}
			"####" H 1//or frames abcd
			{
				if(vel.z == 0 || pos.z <= floorz)
					setstatelabel("hit_ground");
			}
		loop;

		death:
		hit_ground:
			"####" AAAAAAA 0 doomb_for_khorne("doomb_red_blood_trail", (0, 0, random(20, 30) ), (frandom(-5, 5), frandom(-5, 5), frandom(0, 5) ) );
			"####" A 0 A_SpawnItem("Brutal_BloodSpot",0,0,0,1);
			"####" E -1 A_QueueCorpse();
		stop;
	}
}