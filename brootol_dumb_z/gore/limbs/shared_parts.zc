CLASS doomb_body_piece_base : doomb_body_base
{
Default
{
	Radius 2;
	Height 2;
	Speed 6;
	Mass 1;
	Decal "BrutalBloodSplat";
	-solid
	+CLIENTSIDEONLY;
	BounceFactor 0.4;
	+DOOMBOUNCE;
	+MISSILE;
	+NOTELEPORT;
	+DONTSPLASH;
	+MOVEWITHSECTOR;
	+FLOORCLIP;
	+ROLLCENTER;
	+rollsprite
	Scale 0.6;
}

private double roll_change;

void set_appearance(shared_body_pieces_types type = 0)
{
	roll_change = frandom(-15, 15);
	roll = random(0, 90);

	switch(type)
	{
		case 0:
		case BPT_NONE:
		default:
		break;
	
		case BPT_JAW:
			//sprite = getspriteindex();
		break;
	}
}

States
{
	//head_piece
	brib i 0;
	//head_pieceGreenBig
	BR7B A 0;
	//head_pieceGreen
	BR7B I 0;
	//head_piece_dark
	brib o 0;
	//SmallBrainPiece 1
	XDT5 B 800;
	//SmallBrainPiece 2
	XDT5 O 800;
	//stomach with intestines (XDeathStomach)
	guts k 0;

	//BrainsSergeantHeadPiece
	BR7B E 0;
	//BrainsImpHeadPiece
	BR7N E 0;

	//unused sprites
	//what is this?
	brin a 0;
	brin d 0;
	xdt2 efghjklm 0;
	//heart
	xdt2 abcd 0;

	spawn:
		"####" "#" 4
		{
			if(waterlevel > 1)
				setstatelabel("death");

			roll += roll_change;
			doomb_for_khorne("doomb_red_blood_trail", (0, 0, 0 ), doomb_random_velocity(5) );
		}
	loop;

	death:
		"####" "#" 800
		{
			doomb_spawn_bloodpool(BPS_SMALL);
			roll = 0;
		}
	stop;
}

}


CLASS jaw : doomb_body_piece_base {
	States
	{
		Spawn:
			TNT1 A 0 A_JumpIf(waterlevel > 1, "Death");
			GIBD H 4 doomb_for_khorne("doomb_red_blood_trail", (0, 0, 0 ), doomb_random_velocity(5) );
		Loop;
	}
}

CLASS jaw_big: jaw { //White skinned piece 1
	Default {
		Scale 1.3;
	}
}


CLASS eye : doomb_body_piece_base { //Eyeballs
	States
	{
		Spawn:
			TNT1 A 0 A_JumpIf(waterlevel > 1, "Death");
			GIBD J 4 doomb_for_khorne("doomb_red_blood_trail", (0, 0, 0 ), doomb_random_velocity(5) );
		Loop;
	}
}

CLASS head_piece : doomb_body_piece_base { //White skinned piece 1
	States
	{
		Spawn:
			TNT1 A 0 A_JumpIf(waterlevel > 1, "Death");
			BRIB IJKL 4 doomb_for_khorne("doomb_red_blood_trail", (0, 0, 0 ), doomb_random_velocity(5) );
		Loop;
	}
}


CLASS head_piece_dark : doomb_body_piece_base { //Brown skinned piece
	States
	{
		Spawn:
			TNT1 A 0 A_JumpIf(waterlevel > 1, "Death");
			BRIB MNOP 4 doomb_for_khorne("doomb_red_blood_trail", (0, 0, 0 ), doomb_random_velocity(5) );
			Loop;
	}
}

CLASS SmallBrainPiece : doomb_body_base { 
	Default {
		Radius 2;
		Height 2;
		Speed 10;
		Mass 1;
		Scale 0.5;
		Decal "BrutalBloodSuper";
		+MISSILE;
		+NOTELEPORT;
		+THRUGHOST;
		+THRUACTORS;
		+CLIENTSIDEONLY;
		+DONTSPLASH;
		+MOVEWITHSECTOR;
		-DONTSPLASH;
		+FORCEXYBILLBOARD;
		+FLOORCLIP;
	}
	States
	{
			XDT5 B 800;
			XDT5 O 800;
		
		Spawn:
			XDB5 ABCD 3;
		Loop;
	
	
		Death:
			"####" "#" 0 A_CheckFloor("on_floor");
		stick:
			XDB5 "#########################################################################################" 1
			{
				vel = (0, 0, 0);
				setorigin( (pos.xy, ceilingz - height), true);
			}
			XDB5 "#" 1
			{
				if(random(0, 10) > 1)
					setstatelabel("stick");
			}
		fall_down:
			XDB5 "#" 1
			{
				vel.z -= 0.5;
				if(pos.z <= floorz)
					setstatelabel("on_floor");
			}
		loop;

		on_floor:
			XDT5 B 800
			{
				frame = randompick(1, 14);
			}
			XDT5 "#" 35 a_fadeout(0.05);
		wait;
	}
}




class doomb_generic_internal_organ : doomb_body_base
{
Default
{
	Radius 2;
	Height 2;
	Speed 6;
	Mass 1;
	Decal "BrutalBloodSplat";
	-solid
	+CLIENTSIDEONLY;
	BounceFactor 0.4;
	+MISSILE;
	+NOTELEPORT;
	+DONTSPLASH;
	+MOVEWITHSECTOR;
	+FLOORCLIP;
	+ROLLCENTER;
	+rollsprite
	Scale 0.8;
}

void set_gib_appearance()
{
	scale.x *= randompick(-1, 1);
}

States
{
	//generic gibs
	gib_1:
		gibd a 1;
	stop;

	gib_2:
		gibd b 2;
	stop;
	
	gib_3:
		gibd c 2;
	stop;

	gib_4:
		gibd d 2;
	stop;

	gib_5:
		gibd e 2;
	stop;

	gib_6:
		gibd f 2;
	stop;

	gib_6:
		gibd g 2;
	stop;


	jaw:
		GIBD H 1;
	stop;

	eye:
		GIBD J 1;
	stop;








	//organs
	heart:
		guts a 1;
	stop;

	//itenstines
	intestine_1:
		guts b 1;
	stop;
		
	intestine_2:
		guts c 1;
	stop;

	stomach_1:
		guts d 1;
	stop;

	stomach_2:
		guts e 1;
	stop;

	stomach_3:
		guts f 1;
	stop;

	stomach_4:
		guts g 1;
	stop;

	stomach_5:
		guts h 1;
	stop;



	//specific intestines
	guts_pile:
		guts h 1;
	stop;

	guts_pile_1_flying:
		guts k 1;
	stop;

	guts_pile_1_lying:
		guts l 1;
	stop;

}

}