//contain all monster fatality states 
class doomb_marine_base : doomb_monster_base
{
//direct copypaste of cheap_melee from monster base
protected void doomb_marine_punch(double distance = 0, int dam = 0, name damage_type = "")
{
	actor a = doomb_cheap_melee_attack(distance, dam, damage_type);

	if(a)
		A_PlaySound("player/cyborg/fist");

	else
		A_PlaySound("skeleton/swing");
}

protected bool guarding;
protected bool is_guarding() const
{
	return guarding;
}


protected playerpawn leader;

protected void doomb_set_leader()
{
	if(leader) return;

	if(target && target.player && target is "playerpawn")
		leader = playerpawn(target);

	else
	{
		ThinkerIterator pl = ThinkerIterator.Create("playerpawn", STAT_PLAYER);
		playerpawn mo;
		double dist = double.infinity;

		while(mo = playerpawn(pl.Next() ) )
		{
			vector3 v = level.vec3diff(self.pos, mo.pos);
			if(v dot v < dist)
			{
				dist = v dot v;
				leader = mo;
			}
		}
	}

	if(leader)
	{
		translation = leader.translation;
	}
}

protected double doomb_sqrd_distance_to_leader()
{
	if(leader)
	{
		vector3 v = level.vec3diff(self.pos, leader.pos);

		double d = (v dot v);
		return d;
	}

	return double.infinity;
}

protected void doomb_warp_to_leader()
{
	if(leader)
	{
		if(doomb_sqrd_distance_to_leader() > 300 * 300)
		{
			//spawns behind player, i.e. player wouldn see how marines pops out from empty space
			vector3 offset = (( cos(leader.angle), sin(leader.angle) ) * -(self.radius + leader.radius + 30), 0);
			setorigin(leader.pos + offset, false);
		}
	}
}

protected void doomb_try_share_ammo()
{
	if(random(0, 100) < 5 && doomb_sqrd_distance_to_leader() < 100 * 100)
		setstatelabel("share_some_ammo");
}

protected void doomb_give_leader_ammo()
{
	if(leader)
	{
		if(doomb_sqrd_distance_to_leader() < 100 * 100)
		{
			if(spare_ammo)
			{
				actor a = spawn(spare_ammo);
				a.touch(leader);
				inventory(a).PrintPickupMessage(leader.CheckLocalView(), inventory(a).PickupMessage() );
			}
		}
	}
}

protected class<ammo> spare_ammo;
property spare_ammo : spare_ammo;

Default
{
    Radius 12;
    Height 52;
    Speed 5;
    FastSpeed 22;
    Scale 0.98;
    MeleeRange 70;
    MaxStepHeight 52;
    MaxDropOffHeight 52;
    Mass 100;
    Health 100;
    //this made enemy search waaaaaaay to slow
	//MaxTargetRange 99999;

    PainChance 200;
    PainChance "Kick", 255;
    damagefactor "Leg", 0.0;
    damagefactor "Shotgun", 0.0;
    damagefactor "Cutless", 0.0;
    damagefactor "SSG", 0.0;
    damagefactor "Trample", 0.0;
    damagefactor "bullet", 0.0;
    damagefactor "cutless", 0.0;
    damagefactor "shotgun", 0.0;
    damagefactor "ssg", 0.0;
    damagefactor "Blood", 0.0;
    damagefactor "GreenBlood", 0.0;
    damagefactor "BlueBlood", 0.0;
    damagefactor "Taunt", 0.0 ;
    damagefactor "Blood", 0.0;
    damagefactor "BlueBlood", 0.0;
    damagefactor "GreenBlood", 0.0;
    damagefactor "SpawnMarine", 0.0;
    damagefactor "Cut", 0.1;
    damagefactor "HelperMarineFatallity", 0.0;
    
    Monster;
    +FLOORCLIP;
    -NORADIUSDMG;
    +QUICKTORETALIATE;
    +NOBLOCKMONST;
    +DONTHARMCLASS;
    +THRUSPECIES;
    +FIXMAPTHINGPOS;
    +LOOKALLAROUND;
    +PUSHABLE;
    +SLIDESONWALLS;
	+nodropoff
    -CANNOTPUSH;
    -COUNTKILL;
    +DONTSPLASH;
    +FIXMAPTHINGPOS;
    +NORADIUSDMG;
    +USESPECIAL;
    +MTHRUSPECIES;
    +DONTHARMCLASS;
	+friendly
	+MISSILEMORE
	+MISSILEEVENMORE
    
	Activation THINGSPEC_Activate;
	doomb_marine_base.spare_ammo "";
    Species "Marines";
    Translation "112:127=117:127";
    BloodType "Brutal_Blood", "SawBlood";
    AttackSound "none";
    ActiveSound "none";
    DeathSound "DSMADTH";
    PainSound "*pain";
    SeeSound "None";
    Obituary "%o has been gunned down by a Marine.";

	doomb_marine_base.spare_ammo "";
}

override bool Used (Actor user)
{
    if(health > 0 && bcorpse == false)
    {
        if(guarding)
		{
			SetStateLabel("follow_player");
			guarding = false;
			speed = default.speed;
			return true;
		}

		else
		{
        	SetStateLabel("guard_area");
			guarding = true;
			speed = 0;
			return true;
		}
	}

	return false;
}

virtual int doomb_get_aditional_death_sprite()
{
    return -1; //<- return TNT1 sprite name 
}

override int DamageMobj(Actor inflictor, Actor source,int damage,Name mod,int Flags,Double angle)
{
	//friendly marines cant harm each other
	if( (inflictor && inflictor is "doomb_marine_base") || (source && source is "doomb_marine_base") ||
	//and cant be harmed by player
	(inflictor && inflictor is "playerpawn") || (source && source is "playerpawn") )
	{
		return 0;
	}

	//cant headshot and etc marines, so call original damage mobj to save time
	return actor.DamageMobj(inflictor, source, damage, mod, flags, angle);
}

protected void doomb_trigger_monsters(sector square = null, bool original = true)
{
	if(square)
	{
		if(original)
		{
			for (Actor check = square.thinglist; check != null; check = check.snext)
			{
				if (check.bnoclip == true ||  check.bnoblockmap == true || check.bnointeraction == true || check.bkilled == true)
					continue;
				
				if(check.bismonster == true && check.health > 0 && check.bcorpse == false )
				{
					vector3 p = level.vec3diff(self.pos, check.pos);

					if(p dot p < 250000 && check != self)//can set self target to self otherwise
						check.target = self;
				}
			}
		}
		//check neighborn sectors
		else
		{
			for(uint i = 0; i < square.lines.size(); i++)
			{
				if(square.lines[i].frontsector == square)
					doomb_trigger_monsters(square.lines[i].backsector, false);
				else
					doomb_trigger_monsters(square.lines[i].frontsector, false);
			}
		}
	}
}

states
{
		
	Death:
	Death.Bullet:
		"####" H 10
        {
            sprite = doomb_get_aditional_death_sprite();
            A_PlayerScream();
		    {busespecial = false;}
		    A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
        }
        "####" I 10 A_NoBlocking;
		"####" J 10 A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		"####" KLM 10;
		"####" N -1 doomb_spawn_bloodpool();
	Stop;
		
	Death.Eat:
		TNT1 A 0 {bfriendly = false;}
		TNT1 A 0 {busespecial = false;}
		TNT1 A 0 A_GiveToTarget("EatMe",1);
		TNT1 A 0 A_SpawnProjectile ("XDeath1", 1, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("XDeath4", 1, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		XPL1 A 10 A_XScream;
		XPL1 B 20 A_NoBlocking;
		XPL1 CDE 10;
			TNT1 A 0 doomb_spawn_bloodpool();
		XPL1 E -1;
	Stop;
		
	Death.CutLess:
		TNT1 A 0;
		TNT1 A 0 {busespecial = false;}
		TNT1 A 0 {bfriendly = false;}
		TNT1 A 0 A_Jump (128, 3);
	Goto Death;
	Death.Cut:
	Death.Saw:
		TNT1 A 0 {busespecial = false;}
		TNT1 A 0 {bfriendly = false;}
		TNT1 A 0 A_SpawnProjectile ("XDeath1", 1, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("XDeath2", 1, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("XDeath3", 1, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("XDeath4", 1, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("RipGuts", 50, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("XDeathHalfMarine", 50, 0, random (0, 360), 2, random (0, 160));
		TNT1 AA 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		XPL2 A 10 A_XScream;
		TNT1 AA 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		XPL2 B 20 A_NoBlocking;
		TNT1 A 0 A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 AA 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		XPL2 C 10 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		TNT1 AA 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		XPL2 DE 10 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
			TNT1 A 0 doomb_spawn_bloodpool();
		XPL2 E -1;
	Stop;
		
	Death.Slime:
		TNT1 A 0 A_NoBlocking;
		TNT1 A 0 {busespecial = false;}
		TNT1 A 0 {bfriendly = false;}
		TNT1 A 0 A_PlaySound("BIGSCREA");
		TNT1 A 0 A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		PMET AABBCCDDEEFFGGHHIIIII 10 doomb_show_effect("ExplosionSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
		PMET IIIIIIIIIIJJJJJJJJJJJJJJJJJJJJJJKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLL 3 doomb_show_effect("ExplosionSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
		TNT1 A -1;
	Stop;
		
	Death.Rip:
		TNT1 A 0;
		TNT1 A 0 {bfriendly = false;}
		TNT1 A 0 {busespecial = false;}
		TNT1 AAAAAAAAAAA 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		XPL3 A 10 A_XScream;
		TNT1 AAAAA 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		XPL3 B 20 A_NoBlocking;
		TNT1 A 0 A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		XPL3 C 10 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		XPL3 D 10 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		XPL3 E 10 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		XPL3 F 10 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		XPL3 F 10 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
			TNT1 A 0 doomb_spawn_bloodpool();
		XPL3 F -1;
	Stop;

	XDeath:
		TNT1 A 0 ThrustThingZ(0,60,0,1);
		TNT1 A 0 {busespecial = false;}
		TNT1 A 0 {bfriendly = false;}
		TNT1 A 0 A_SpawnProjectile ("MarineXDeath", 0, 0, random (0, 360), 2, random (0, 160));
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION);
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION);
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION);
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION);
		MHEA A 7 A_XScream;
		MHEA B 7 A_NoBlocking;
		TNT1 A 0 A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		MHEA CD 7;
		MHEA E -1;
	Stop;
		
	Crush:
	Death.Stomp:
		TNT1 A 0;
		TNT1 A 0 {busespecial = false;}
		TNT1 A 0 {bfriendly = false;}
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAA 0 doomb_for_khorne("Brutal_FlyingBloodTrail", (0, 0, 0 ), (frandom(-5, 5), frandom(-5, 5), frandom(0, 5) ) );
		TNT1 AAAAAA 0 bright A_SpawnProjectile ("SuperGoreSpawner", 5, 0, random (0, 360), 2, random (30, 180));
		TNT1 AAAAAA 0 bright A_SpawnProjectile ("XDeath1", 5, 0, random (0, 360), 2, random (30, 180));
		TNT1 AA 0 bright A_SpawnProjectile ("XDeath2", 55, 0, random (0, 360), 2, random (30, 180));
		TNT1 AA 0 bright A_SpawnProjectile ("XDeath3", 55, 0, random (0, 360), 2, random (30, 180));
		TNT1 A 0 doomb_spawn_bloodpool();
		TNT1 A 0 A_SpawnItem ("CrushedRemains");
		TNT1 A 0 A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 1;
		TNT1 A 1 A_XScream;
		TNT1 A 1 A_NoBlocking;
	Stop;
		
	Death.Blast:
	Death.punch:
	Death.SSG:
		"####" O 2
        {
            sprite = doomb_get_aditional_death_sprite();

            A_FaceTarget();
		    {busespecial = false;}
		    {bfriendly = false;}
		    A_SpawnProjectile ("XDeath1", 32, 0, random (170, 190), 2, random (0, 40));
		    A_SpawnProjectile ("XDeath2", 32, 0, random (170, 190), 2, random (0, 40));
		    A_SpawnProjectile ("XDeath3", 32, 0, random (170, 190), 2, random (0, 40));
		    A_SpawnProjectile ("Brutal_FlyingBlood", 32, 0, random (170, 190), 2, random (0, 40));
		    doomb_for_khorne("Brutal_FlyingBloodTrail", (0, 0, 32 ), (frandom(-5, 5), frandom(-5, 5), frandom(0, 5) ) );
		    A_SpawnProjectile ("Brutal_FlyingBlood", 32, 0, random (170, 190), 2, random (0, 40));
		    A_SpawnProjectile ("WallRedBlood", 32, 0, random (170, 190), 2, random (0, 40));
		    A_SpawnProjectile ("WallRedBlood", 46, 0, random (170, 190), 2, random (0, 40));
		    A_SpawnProjectile ("XDeathArm1", 32, 0, random (170, 190), 2, random (0, 40));
		    A_XScream();
		    A_NoBlocking();
		    A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
        }
        "####" OPQRSTU 8;
		"####" U -1 doomb_spawn_bloodpool();
	Stop;


	Death.Rape:
		TNT1 A 0 A_NoBlocking;
		TNT1 A 0 {busespecial = false;}
		TNT1 A 0 {bfriendly = false;}
		TNT1 AAAAAAAAAAAAAA 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		XPL4 A 20 A_XScream;
		TNT1 A 0 A_SpawnProjectile ("XDeath1", 1, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("XDeath2", 1, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("XDeath3", 1, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("XDeath4", 1, 0, random (0, 360), 2, random (0, 160));
		TNT1 AAAA 0 A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		XPL4 BCDEF 20
        {
		    A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		    A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
		    A_SpawnProjectile ("MuchBlood", 50, 0, random (0, 360), 2, random (0, 160));
        }
			TNT1 A 0 doomb_spawn_bloodpool();
		XPL4 F -1;
	Stop;
		
	Death.plasma:
		TNT1 A 0;
		TNT1 A 0 {busespecial = false;}
		TNT1 A 0 {bfriendly = false;}
		TNT1 A 0 A_XScream;
		TNT1 A 0 A_NoBlocking;
		TNT1 AAA 0 A_SpawnProjectile ("Brutal_FlyingBlood", 50, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("XDeathBurnedArm", 32, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("XDeathBurnedLeg", 32, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 A_SpawnProjectile ("XDeathBurnedSkull", 32, 0, random (0, 360), 2, random (0, 160));
		TNT1 A 0 doomb_spawn_burned_flesh;
		EXPL AAAAAA 0 doomb_show_effect("ExplosionSmoke", (0, 0, 0), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 1) ) );
		TNT1 A 1;
		TNT1 A 0 A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
	Stop;
		
		
	fire_death_1:
		TNT1 A 0;
		TNT1 A 0 {busespecial = false;}
		TNT1 A 0 {bfriendly = false;}
		PBUR A 1;
		PBUR A 1 A_Scream;
		PBUR A 1 A_NoBlocking;
		TNT1 A 0 A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		PBUR AAAABBBBCCCC 2 doomb_show_effect("FlameTrails", (0, 0, 32), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5) ), (0.3, 0) );
		PBUR DDDDEEEE 2 doomb_show_effect("FlameTrails", (0, 0, 16), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5) ), (0.3, 0) );
		PBUR EEEEE 4 doomb_show_effect("FlameTrails", (0, 0, 8), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5) ), (0.3, 0) );
		PBUR EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 6 doomb_show_effect("ExplosionSmoke", (0, 0, 8), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
		PBUR E -1;
	Stop;
		
	Death.Fire:
		tnt1 a 0 a_jump(128, "fire_death_1");
		TNT1 A 0;
		TNT1 A 0 {busespecial = false;}
		TNT1 A 0 {bfriendly = false;}
		TNT1 A 0 A_PlaySound("BIGSCREA");
		BURN W 6 A_Scream;
		BURN X 6 A_NoBlocking;
		TNT1 A 0 A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		BUR2 ABCD 6 BRIGHT doomb_show_effect("ExplosionSmoke", (0, 0, 8), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
		BURN FGHIJKL 6 BRIGHT doomb_show_effect("ExplosionSmoke", (0, 0, 8), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
		BURN MNOPQRSTUV 6 BRIGHT doomb_show_effect("ExplosionSmoke", (0, 0, 8), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
		BURN VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV 6 doomb_show_effect("ExplosionSmoke", (0, 0, 8), (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(0.5, 1) ), (0.5, 0), 0.1 );
		BURN V -1;
	Stop;
		
		
	Death.Explosive_Impact:
		TNT1 A 0;
		TNT1 A 0 {busespecial = false;}
		TNT1 A 0 {bfriendly = false;}
		tnt1 A 0 ThrustThingZ(0,30,0,1);
		tnt1 AAAA 0 A_SpawnProjectile ("Brains1", 50, 0, random (0, 360), 2, random (0, 160));
		tnt1 A 0 A_SpawnProjectile ("jaw", 50, 0, random (0, 360), 2, random (0, 160));
		tnt1 A 0 A_SpawnProjectile ("eye", 50, 0, random (0, 360), 2, random (0, 160));
		tnt1 A 0 A_SpawnProjectile ("head_piece", 50, 0, random (0, 360), 2, random (0, 160));
		tnt1 A 0 A_SpawnProjectile ("head_piece", 50, 0, random (0, 360), 2, random (0, 160));
		tnt1 AAAA 0 A_SpawnProjectile ("SmallBrainPiece", random (45, 55), random (5, -5), random (170, 190), 2, random (0, 40));
		tnt1 AAAA 0 A_SpawnProjectile ("SmallBrainPiece", 50, 0, random (0, 360), 2, random (0, 160));
		tnt1 AA 0 A_SpawnProjectile ("WallRedBlood", 46, 0, random (170, 190), 2, random (0, 40));
		tnt1 AAAAAAAAAAA 0 A_SpawnProjectile ("Brutal_Blood", 50, 0, random (0, 360), 2, random (0, 160));
		tnt1 A 0 A_SpawnProjectile ("XDeathArm1", 35, 0, random (0, 360), 2, random (0, 160));
		tnt1 A 0 A_SpawnProjectile ("XDeath3", 40, 0, random (0, 360), 2, random (0, 160));
		PPOD A 0 A_SpawnItemEx("BasicMarineGib1", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION);
		tnt1 AAAA 0 A_SpawnProjectile ("XDeath1", 40, 0, random (0, 360), 2, random (0, 160));
		tnt1 A 0 A_XScream;
		XPL6 A 5;
		tnt1 A 0 A_NoBlocking;
		XPL6 BCDE 5;
		TNT1 A 0 A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		XPL6 F -1;
	Stop;
		
	Crush:
		TNT1 A 0 A_PlaySound("misc/xdeath4");
		TNT1 A 0 {busespecial = false;}
		CRS1 A 5;
		CRS1 A -1;
	Stop;
		
	Death.HKFT:
	Death.BHFT:
	Death.RVFT:
		TNT1 A 1 A_Scream;
		TNT1 A 0 {busespecial = false;}
		TNT1 A 1 A_NoBlocking;
		TNT1 A 0 A_GiveToTarget("Curbstomp_Marine",1);
		TNT1 A 0;
		TNT1 A 0 {bfriendly = false;}
		TNT1 A 5;
		TNT1 A 0 A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A -1;
		Stop;
		
	Death.FatalityMarine:
		TNT1 A 1 A_PlayerScream;
		TNT1 A 0 A_GiveToTarget("GoFatality", 1);
		TNT1 A 1 A_NoBlocking;
		TNT1 A 0 A_SpawnItemEx("RemoveMarine",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_GiveToTarget("Fatality_Marine",1);
		TNT1 A -1;
		Stop;

		
		
		

		
		
		
		
		
		
		
		
		
		
		
	Salute:
		TNT1 A 0;
		TNT1 A 0 A_Jump(255, "Salutes1", "Salutes2");
		
	Salutes1:
		TNT1 A 0;
		TNT1 A 0;
		TNT1 A 0 A_PlaySound ("DSSALUTE");
		MWAV BCDEFEFDCB 6;
        tnt1 a 0 setstatelabel("FollowPlayer");
    stop;
		
	Salutes2:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound ("DSSALUTE");
		MWAV GHGHG 8;
        tnt1 a 0 setstatelabel("FollowPlayer");
    stop;
}

}



























































CLASS TargetIsAMarine : Inventory { 
	Default {
	
	inventory.maxamount 1;
	}
}


CLASS BotIsChasingYou : Inventory { 
	Default {
	
	inventory.maxamount 1;
	}
}


CLASS NumberOfAllies : Inventory { 
	Default {
	
	inventory.maxamount 5;
	}
}

CLASS MarinesDispenser : Inventory { 
	Default {
	
	inventory.maxamount 5;
	}
}

CLASS MarinesChaingunDispenser : Inventory { 
	Default {
	
	inventory.maxamount 5;
	}
}

CLASS CheckMarines : Inventory { 
	Default {
	
	inventory.maxamount 1;
	}
}



CLASS Marine1Pathfinder : ACTOR { 
	Default {
	
	Radius 32;
	Height 56;
	Speed 20;
	Health 4000;
	PainChance 255;
	MaxTargetRange 150;
	Monster;
	damagefactor "SpawnMarine", 8000.0;
	MaxDropOffHeight 1200;
	MaxStepHeight 1200;
	-COUNTKILL;
	+NOTARGET;
	+THRUACTORS;
	+MISSILEMORE;
	+MISSILEEVENMORE;
	+DONTSPLASH;
	-SHOOTABLE;
	-FRIENDLY;
	+NOCLIP;
	+LOOKALLAROUND;
	+NOINFIGHTING;
	}
	States
	{
	Spawn:
	Pain:
	See:
		TNT1 A 0 {bfriendly = false;}
		TNT1 A 0;
		TNT1 A 0 A_GiveInventory("TargetIsAMarine", 1);
		TNT1 AAAAA 1 A_Chase;
		TNT1 A 0;
		TNT1 A 0 A_GiveInventory("TargetIsAMarine", 1);
		TNT1 A 1 A_FaceTarget;
	Loop;

	Death:
	Missile:
		TNT1 A 1 A_Recoil(-2);
		TNT1 A 0 A_NoBlocking;
		TNT1 A 0 A_SpawnItemEx(target.getclassname(),0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_SpawnItem("TeleportFog");
		Stop;
}
}


CLASS MarineAdd: Marine1Pathfinder { 
	Default {
	Speed 4;
	}
	States
	{
	Death:
	Missile:
		TNT1 A 1;
		TNT1 A 0 A_GiveToTarget("NumberOfAllies", 1);
	Stop;
}
}

CLASS RemoveMarine : ACTOR { 
	States
	{
	Spawn:
	Pain:
	See:
		TNT1 A 1;
		TNT1 A 0 A_SpawnItemEx("RemoveMarineActivate",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 1;
		Stop;
}
}

CLASS RemoveMarineActivate: Marine1Pathfinder { 
	Default {
	
	-FRIENDLY;
	-SHOOTABLE;
	Scale 1.0;
	Speed 1;
	MaxTargetRange 90000;
	}
	States
	{
	Missile:
		TNT1 A 1;
		TNT1 A 0 A_TakeFromTarget("NumberOfAllies", 1);
		TNT1 A 1;
	Stop;
}
}




CLASS MarineSpawnChecker : ACTOR { 
	Default {
	
	MONSTER;
	-COUNTKILL;
	+FRIENDLY;
	-SOLID;
	-SHOOTABLE;
	Health 1;
	Radius 16;
	Height 52;
	Damagetype "SpawnMarine";
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_GiveInventory("TargetIsAMarine", 1);
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_Explode(25, 40);
		Stop;
	Death:
		TNT1 A 1;
		Stop;
}
}


CLASS PrePlacedMarine : ACTOR Replaces MarinePistol { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			Stop;
	}
}





CLASS Marine_Fist: PrePlacedMarine Replaces MarineFist { 
	Default {
		
		Health 90;
	}
}

CLASS Marine_SSG: PrePlacedMarine Replaces MarineSSG { 
	Default {
		
		Health 90;
	}
}



CLASS PrePlacedMarineShotgun : ACTOR Replaces MarineShotgun { 
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItemEx ("Marine_ShotgunSpawn",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			Stop;
	}
}


CLASS NumberOfAlliesShotgun : Inventory { 
	Default {
		
		inventory.maxamount 5;
	}
}

CLASS MarinesShotgunDispenser : Inventory { 
	Default {
		
		inventory.maxamount 5;
	}
}




CLASS Marine_ShotgunSpawn: RedTorch { 
	Default {
		
		Radius 10;
		Height 48;
		MONSTER;
		-SHOOTABLE;
		-COUNTKILL;
		-FRIENDLY;
	}
	States
	{
		Spawn:
			PLA3 A 10;
			PLA3 A 1 A_CheckSight("DontSpawn");
			TNT1 A 0 A_Chase;
			TNT1 A 0 A_Look;
		See:
			TNT1 A 0 A_GiveToTarget("NumberOfAlliesShotgun", 1);
			TNT1 A 0 A_SpawnItemEx ("Marine_Shotgun",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			Stop;
		DontSpawn:
			PLA3 A 1;
			Goto Spawn;
	}
}


CLASS PrePlacedMarinePlasmaGun : ACTOR Replaces MarinePlasma { 
	Default {
		
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItemEx ("Marine_PlasmaGunSpawn",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			Stop;
	}
}


CLASS NumberOfAlliesPlasmaGun : Inventory { 
	Default {
		
		inventory.maxamount 5;
	}
}

CLASS MarinesPlasmaGunDispenser : Inventory { 
	Default {
		
		inventory.maxamount 5;
	}
}

CLASS PrePlacedMarineRocket : ACTOR Replaces MarineRocket { 
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItemEx ("Marine_RocketSpawn",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			Stop;
	}
}


CLASS NumberOfAlliesRocket : Inventory { 
	Default {
		
		inventory.maxamount 5;
	}
}

CLASS MarinesRocketDispenser : Inventory { 
	Default {
		
		inventory.maxamount 5;
	}
}